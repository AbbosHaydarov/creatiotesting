namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TempAccessProxyExceptionsSchema

	/// <exclude/>
	public class TempAccessProxyExceptionsSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TempAccessProxyExceptionsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TempAccessProxyExceptionsSchema(TempAccessProxyExceptionsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7f12bace-72ee-4042-9a07-c5a18b5d88ca");
			Name = "TempAccessProxyExceptions";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f214e3c2-8cc2-4e62-be3f-96a9b4832c80");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,84,77,111,219,48,12,61,39,64,254,3,145,94,18,192,136,239,89,27,32,232,122,232,101,45,144,238,52,236,160,40,180,35,84,150,12,74,106,146,13,251,239,163,229,124,184,181,51,108,237,128,237,208,139,13,209,226,35,249,248,252,140,40,208,149,66,34,60,32,145,112,54,243,147,107,107,50,149,7,18,94,89,51,185,217,122,36,35,244,92,74,116,238,94,200,71,145,227,160,255,125,208,239,5,167,76,14,139,157,243,88,124,24,244,57,114,65,152,115,18,92,107,225,220,20,230,165,90,32,61,33,221,108,37,150,21,92,188,245,229,110,233,172,70,143,163,225,103,215,172,124,55,15,126,125,107,60,230,199,226,251,188,73,27,106,152,128,167,128,227,175,140,152,166,41,92,186,80,20,130,118,179,253,249,97,141,128,135,203,224,215,194,131,114,252,38,187,49,176,89,163,129,146,236,118,7,185,245,192,29,88,130,140,108,1,162,84,224,98,165,201,1,56,109,32,151,97,169,149,4,89,13,216,49,31,76,161,49,107,143,89,226,231,137,22,107,28,247,44,189,37,102,231,62,66,213,55,94,14,16,3,183,70,121,37,180,250,134,14,4,24,220,128,226,124,97,120,91,54,227,73,144,83,16,65,18,102,87,195,14,130,210,89,221,103,53,72,123,146,58,82,10,18,5,24,150,193,213,144,165,224,120,185,195,89,69,221,254,80,19,183,66,39,73,45,185,143,170,106,100,107,114,153,198,220,8,181,103,165,221,195,136,231,173,68,178,71,27,87,151,123,83,88,10,135,163,67,12,42,45,245,126,252,175,68,212,218,120,70,7,110,75,45,184,133,88,154,144,197,107,32,227,75,145,156,163,100,155,4,181,74,40,99,154,29,206,206,169,149,167,18,193,29,231,148,129,8,141,63,93,77,128,235,50,39,65,107,238,36,67,254,42,241,80,81,101,96,44,196,82,13,112,198,117,37,74,149,41,92,189,106,139,201,73,227,53,248,241,56,134,231,187,77,90,223,155,187,190,64,179,170,255,140,120,174,163,47,130,231,28,133,127,37,131,210,171,39,229,119,127,209,93,58,97,223,238,52,149,169,72,193,43,202,132,210,184,130,85,224,85,106,85,109,210,171,2,109,240,9,203,218,111,44,61,86,174,180,212,88,184,4,62,126,90,196,132,64,76,36,122,249,7,134,212,57,199,187,57,157,231,230,95,26,85,183,232,222,77,139,94,99,90,191,179,221,95,24,88,199,222,223,108,98,172,152,159,194,34,207,213,104,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7f12bace-72ee-4042-9a07-c5a18b5d88ca"));
		}

		#endregion

	}

	#endregion

}

