namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: FloatColumnProcessorSchema

	/// <exclude/>
	public class FloatColumnProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FloatColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FloatColumnProcessorSchema(FloatColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("30a1a7ef-6525-497b-a8c9-487797a70be1");
			Name = "FloatColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("bdeb1980-c322-4103-af7f-58bfe7162080");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,84,193,110,219,48,12,61,167,64,255,129,203,46,9,16,56,247,182,201,176,165,75,145,195,138,160,73,119,41,122,80,108,58,21,32,75,6,37,5,205,138,254,251,40,201,70,227,52,235,101,195,114,112,44,154,124,124,124,36,165,69,133,182,22,57,194,26,137,132,53,165,203,102,70,151,114,235,73,56,105,116,54,151,10,23,85,109,200,157,159,189,156,159,245,188,149,122,11,171,189,117,88,93,30,157,179,27,101,54,66,201,95,49,244,221,215,53,62,187,236,14,183,94,9,250,254,92,19,90,203,110,246,205,239,144,67,85,29,34,28,126,33,252,147,61,155,139,220,25,146,24,48,217,231,51,225,150,51,192,76,9,107,47,96,174,140,112,51,163,124,165,151,100,114,78,111,40,250,141,199,99,184,146,250,9,73,186,194,228,144,19,150,147,254,173,209,75,36,43,153,187,62,14,123,89,223,161,245,202,189,246,199,211,22,192,250,170,18,180,111,207,240,85,131,212,214,9,205,234,154,18,220,147,180,144,7,38,192,47,92,124,205,181,203,141,66,40,13,65,157,144,67,77,145,38,228,49,33,236,132,242,104,179,54,199,248,32,201,195,53,150,130,57,124,147,186,224,184,129,219,215,104,202,193,226,136,234,112,4,183,220,101,152,128,230,63,118,56,37,195,112,248,200,136,181,223,40,153,55,36,79,185,193,5,124,164,202,85,129,185,172,132,250,50,29,193,49,13,134,231,241,225,231,91,87,184,126,71,62,116,140,155,179,140,185,147,199,95,247,227,93,67,82,71,248,55,35,20,14,109,183,51,44,28,123,35,54,137,78,85,206,184,161,9,239,187,144,44,181,32,81,69,129,39,125,111,145,184,54,141,121,216,130,254,244,158,207,220,206,214,144,93,141,163,119,12,110,20,63,149,113,112,223,193,129,46,236,48,68,247,46,96,35,44,14,142,62,193,11,188,54,82,163,46,146,218,93,233,57,73,141,228,120,81,88,120,50,142,3,177,248,87,218,215,45,32,152,29,175,167,44,16,110,188,44,224,90,56,241,51,140,243,154,245,190,95,20,48,153,118,109,89,148,225,216,237,242,227,82,126,160,123,50,197,127,170,163,157,239,48,187,108,115,145,231,32,93,143,9,45,90,154,229,141,239,220,141,216,170,208,168,172,19,118,232,20,110,180,94,111,198,217,61,225,66,151,6,114,79,20,56,38,19,111,239,13,106,36,161,152,163,241,148,227,138,215,70,108,25,178,227,151,112,120,173,194,69,146,39,219,170,102,214,165,204,19,181,9,240,13,140,207,124,15,215,138,239,253,67,22,89,124,142,160,255,48,202,30,251,163,8,213,235,242,200,110,125,181,65,154,27,170,132,107,14,215,73,148,21,134,177,102,86,77,49,178,132,193,167,194,240,128,99,182,166,253,82,16,79,234,41,74,35,48,222,65,242,76,247,29,195,175,196,14,135,105,200,123,132,28,163,65,123,165,18,244,78,196,133,10,82,98,209,150,53,104,154,51,60,132,72,254,13,64,55,36,126,58,189,39,201,218,53,190,158,159,253,6,124,120,164,205,45,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("30a1a7ef-6525-497b-a8c9-487797a70be1"));
		}

		#endregion

	}

	#endregion

}

