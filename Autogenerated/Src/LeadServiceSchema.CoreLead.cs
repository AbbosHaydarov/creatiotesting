namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: LeadServiceSchema

	/// <exclude/>
	public class LeadServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public LeadServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public LeadServiceSchema(LeadServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("e0595561-29cb-475e-b0ba-b8ca0af81613");
			Name = "LeadService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("555d4b37-c88a-4293-9442-4a20aed79dca");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,181,84,77,79,27,49,16,61,47,82,255,195,40,28,186,145,210,205,29,146,72,64,5,165,226,163,74,168,56,68,28,204,122,18,172,238,122,23,143,157,42,66,252,247,142,237,77,72,96,19,78,189,172,228,241,123,51,243,158,103,86,139,18,169,22,57,194,29,26,35,168,154,217,236,172,210,51,53,119,70,88,85,233,47,7,47,95,14,18,71,74,207,97,178,36,139,229,241,187,51,227,139,2,115,15,166,236,2,53,26,149,127,192,76,208,44,84,142,215,149,196,98,239,101,118,194,153,22,161,244,126,220,61,62,190,1,54,155,55,152,157,139,220,86,70,33,181,33,152,200,168,178,12,5,248,254,208,224,156,171,193,89,33,136,142,224,59,74,87,23,42,15,45,52,21,3,174,223,239,15,200,149,165,48,203,209,24,107,131,132,218,66,238,89,48,171,12,20,40,36,80,36,100,131,254,10,202,204,105,147,134,141,181,134,91,123,240,177,19,170,111,208,114,35,53,87,122,84,133,178,203,49,62,59,101,176,228,188,148,110,30,188,98,24,194,39,20,143,202,154,128,236,250,34,181,123,100,37,77,143,87,220,95,211,8,28,193,169,32,92,171,75,248,141,249,235,37,194,90,227,42,192,126,125,43,209,62,85,18,106,52,172,180,36,150,41,76,254,4,164,74,85,8,3,6,243,202,72,202,214,57,54,213,199,72,45,140,40,65,243,184,13,59,222,169,75,217,25,249,142,190,18,56,173,158,29,130,146,44,66,205,20,26,118,47,192,223,216,6,173,51,154,70,111,163,6,213,236,35,145,152,185,130,122,238,244,150,59,14,15,185,105,125,50,101,73,151,122,81,253,193,244,58,10,27,66,231,215,237,228,174,211,131,223,70,221,97,89,23,194,122,199,59,231,74,203,113,84,55,137,98,125,211,140,59,173,228,114,98,151,133,71,113,186,107,36,18,115,92,71,179,123,35,234,26,101,207,215,75,252,163,32,217,115,246,78,216,45,66,12,101,63,169,210,61,24,243,42,242,18,225,126,92,120,217,213,211,94,41,178,131,11,167,228,8,218,91,77,201,26,63,255,148,63,97,41,110,216,255,30,120,124,24,215,75,217,5,191,222,73,178,224,87,148,219,147,239,95,248,196,204,137,251,208,248,23,216,65,78,229,252,98,113,212,249,137,155,62,192,11,4,122,178,3,145,118,28,111,4,95,232,248,106,222,224,173,64,55,208,95,253,158,38,201,187,213,11,35,214,210,84,83,114,24,55,54,238,250,146,255,60,118,208,146,96,148,238,144,213,61,94,11,111,198,56,46,136,191,255,129,5,15,206,255,23,223,251,132,223,210,58,39,105,137,110,217,56,105,151,179,75,38,236,180,115,71,162,81,186,199,176,198,214,141,185,108,192,205,104,178,161,59,216,153,31,224,16,220,34,164,155,147,219,12,109,172,17,55,253,93,254,112,245,26,126,103,241,123,136,90,198,63,188,63,114,236,31,233,215,66,132,243,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("e0595561-29cb-475e-b0ba-b8ca0af81613"));
		}

		#endregion

	}

	#endregion

}

