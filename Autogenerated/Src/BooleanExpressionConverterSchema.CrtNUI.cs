namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: BooleanExpressionConverterSchema

	/// <exclude/>
	public class BooleanExpressionConverterSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BooleanExpressionConverterSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BooleanExpressionConverterSchema(BooleanExpressionConverterSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("e8e76036-23ed-44e5-85bb-19db38a01732");
			Name = "BooleanExpressionConverter";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("75f7d434-56de-4d62-8a8c-9fe090e3ebb1");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,125,83,201,110,226,64,16,61,27,137,127,168,241,72,137,45,33,59,228,48,135,176,140,2,226,16,105,150,72,160,185,48,28,26,83,128,103,188,169,151,8,20,205,191,79,117,183,219,216,9,202,197,224,87,245,94,189,90,92,176,28,69,197,18,132,21,114,206,68,185,151,209,188,44,246,233,65,113,38,211,178,232,247,94,251,61,79,137,180,56,192,242,44,36,230,163,126,143,144,207,28,15,20,134,121,198,132,120,128,89,89,102,200,138,197,169,226,40,4,5,72,228,5,185,68,110,178,227,56,134,177,80,121,206,248,121,90,191,215,20,192,134,3,137,35,65,162,101,35,199,140,91,212,245,149,26,143,82,242,116,171,36,6,126,173,234,135,27,202,173,212,54,75,19,43,246,129,69,120,128,167,107,48,41,80,243,244,108,186,253,142,242,88,238,168,223,103,163,108,131,111,155,51,64,173,34,96,91,183,249,194,50,133,186,163,247,45,89,164,98,156,229,80,208,66,38,190,73,246,167,179,14,119,28,155,148,235,12,198,15,42,199,66,10,127,10,143,187,93,170,119,199,50,104,224,247,108,142,82,241,66,76,93,191,187,55,86,199,177,203,208,148,122,148,130,6,77,151,176,208,41,140,230,93,110,255,96,34,45,99,224,162,77,81,152,128,239,135,160,47,200,243,234,32,77,89,101,146,34,129,5,66,195,29,153,20,109,192,185,248,117,129,211,61,4,26,141,86,252,252,204,184,192,192,138,12,160,84,178,147,31,194,205,13,124,178,194,209,147,248,161,178,236,39,95,228,149,60,7,141,169,208,25,50,186,45,175,100,118,126,196,228,239,172,60,53,166,61,47,57,50,14,146,43,36,152,92,223,254,86,247,95,134,195,219,81,59,188,103,153,232,196,239,154,120,211,110,219,38,124,117,138,209,170,92,26,183,65,72,87,232,116,90,104,173,243,15,144,66,93,83,2,245,70,101,201,117,217,65,83,209,118,191,222,128,196,147,52,229,244,30,46,135,176,172,178,84,6,13,217,85,240,244,52,46,148,232,27,22,7,121,212,83,185,191,12,195,45,81,187,183,157,76,90,101,214,119,27,39,230,18,77,71,87,50,135,151,204,143,38,100,255,215,131,105,93,4,13,164,158,139,249,177,79,123,174,245,129,153,60,194,205,215,139,197,206,126,192,230,221,162,93,144,176,255,55,31,101,23,11,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("e8e76036-23ed-44e5-85bb-19db38a01732"));
		}

		#endregion

	}

	#endregion

}

