namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: FileImportFindExistsRowByTextColumnProviderSchema

	/// <exclude/>
	public class FileImportFindExistsRowByTextColumnProviderSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FileImportFindExistsRowByTextColumnProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FileImportFindExistsRowByTextColumnProviderSchema(FileImportFindExistsRowByTextColumnProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4ac71b07-1b41-4064-b515-ca2296b5c89d");
			Name = "FileImportFindExistsRowByTextColumnProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("28117f91-27b8-43f6-8b95-0e32534298ab");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,149,81,111,218,48,16,199,159,65,234,119,56,177,151,160,86,97,123,216,75,91,42,13,40,21,218,186,85,29,123,170,250,96,146,11,88,75,108,116,118,40,81,197,119,223,57,78,26,96,109,181,236,5,97,251,124,247,191,159,239,46,74,100,104,214,34,66,152,35,145,48,58,177,225,88,171,68,46,115,18,86,106,21,78,101,138,179,108,173,201,158,116,159,79,186,157,220,72,181,132,159,133,177,152,177,105,154,98,228,236,76,120,131,10,73,70,23,47,54,251,30,179,76,171,215,79,8,223,218,15,167,34,178,154,36,26,182,96,155,15,132,75,142,4,51,101,145,18,214,124,14,179,70,221,84,170,248,122,43,141,53,247,250,105,84,204,113,107,89,93,158,169,59,210,27,25,35,149,62,6,131,1,92,154,60,203,4,21,87,213,186,50,48,144,228,170,204,69,164,210,22,96,53,100,66,137,37,66,84,250,1,229,88,65,162,9,12,10,138,86,78,49,186,136,238,15,233,39,3,11,190,197,113,77,125,35,206,201,157,37,44,18,100,169,50,172,53,12,246,68,172,243,69,42,35,144,117,94,173,210,130,183,41,28,26,62,239,60,69,84,177,7,121,0,117,156,10,99,206,225,191,120,74,181,226,151,183,177,142,32,34,76,134,189,54,250,123,3,135,224,97,130,137,200,83,59,98,115,70,22,216,98,141,58,9,218,56,234,247,31,27,150,145,75,7,218,97,28,9,131,255,68,242,140,227,116,218,149,94,135,91,199,221,122,193,205,29,99,133,178,140,252,142,228,70,88,244,231,107,191,224,2,226,115,87,17,112,43,182,222,217,88,231,188,28,194,231,143,190,29,142,95,242,208,55,229,174,119,156,251,18,72,229,221,195,105,161,60,248,101,144,216,161,242,93,14,249,193,178,207,212,22,76,45,56,222,118,131,162,179,123,95,230,45,218,149,142,223,2,176,209,50,134,241,10,163,223,95,177,240,154,76,73,32,152,221,163,136,127,168,180,104,134,207,165,207,198,155,93,85,173,86,93,170,196,116,100,2,193,193,65,232,129,94,14,143,16,215,23,58,132,54,167,114,106,149,185,240,239,124,197,109,206,188,44,198,95,54,66,166,98,145,98,35,239,155,204,164,13,122,215,68,154,110,209,24,30,29,115,204,214,41,167,51,213,212,176,53,189,179,227,144,23,237,120,105,203,121,99,92,19,171,150,160,55,60,63,249,213,60,188,114,76,242,44,155,41,105,39,11,31,237,187,27,97,193,62,173,135,199,10,87,147,71,31,60,128,87,233,255,101,236,249,184,74,229,130,174,189,206,84,140,91,174,213,79,213,233,209,165,144,121,92,139,104,21,84,115,114,120,85,51,247,27,252,209,217,171,75,51,25,53,234,217,233,13,218,6,166,219,11,142,35,159,158,86,178,118,239,145,125,109,30,238,78,186,127,0,34,33,236,237,19,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4ac71b07-1b41-4064-b515-ca2296b5c89d"));
		}

		#endregion

	}

	#endregion

}

