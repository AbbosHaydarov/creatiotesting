namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastHistoryCellRepositorySchema

	/// <exclude/>
	public class ForecastHistoryCellRepositorySchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastHistoryCellRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastHistoryCellRepositorySchema(ForecastHistoryCellRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("34a2b5e5-c1f7-89c1-a01b-7b476cc8a544");
			Name = "ForecastHistoryCellRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,88,91,111,219,54,20,126,86,129,254,7,194,125,145,1,67,206,246,50,32,177,61,52,206,101,6,154,52,139,219,190,20,195,192,74,199,49,81,137,242,72,42,141,81,228,191,239,240,102,83,146,101,199,203,94,98,145,226,249,206,253,59,84,56,45,64,174,104,10,228,19,8,65,101,185,80,201,180,228,11,246,80,9,170,88,201,147,171,82,64,74,165,250,242,235,219,55,63,223,190,137,42,201,248,3,153,175,165,130,226,172,177,70,209,60,135,84,203,201,228,26,56,8,150,182,206,92,80,69,91,155,31,24,255,103,187,25,218,82,20,37,223,253,70,64,215,126,114,113,222,249,234,138,166,170,20,12,36,158,192,51,239,4,60,160,185,100,154,83,41,79,137,247,246,15,38,241,212,122,10,121,126,15,171,82,50,189,50,2,95,47,96,65,171,92,157,51,158,33,124,172,214,43,40,23,241,236,26,148,23,174,75,245,7,228,22,163,76,198,164,231,80,123,253,191,246,0,205,184,4,113,36,214,170,250,150,179,148,164,218,137,253,62,144,83,210,109,234,128,236,213,142,175,231,156,174,228,178,84,168,83,23,195,54,124,152,113,37,42,29,90,140,226,157,49,199,132,203,155,182,215,168,248,51,42,69,8,110,107,135,84,181,101,159,24,85,81,125,55,153,46,33,253,254,94,60,84,5,112,117,91,229,121,204,49,52,24,193,134,116,95,151,66,20,53,84,140,27,74,204,161,103,107,242,59,224,153,245,75,175,66,55,239,68,185,194,240,96,245,160,147,130,61,82,5,206,75,187,32,211,101,197,191,75,219,65,245,197,120,66,56,252,168,237,197,222,51,27,116,108,158,170,224,248,174,226,10,237,251,109,96,222,221,208,167,59,42,208,51,5,194,190,3,113,7,226,207,10,48,138,26,12,143,254,114,114,114,98,236,63,107,59,208,109,126,169,208,117,200,188,3,110,73,26,129,106,44,127,146,7,80,103,228,185,238,246,108,71,122,141,133,231,21,203,51,16,228,239,197,254,3,103,77,43,14,34,30,122,111,35,139,198,186,167,136,45,72,124,200,12,50,30,19,142,165,228,19,19,69,135,37,44,117,88,90,89,35,235,169,209,33,219,39,177,3,143,76,69,108,91,199,87,115,220,171,23,103,111,208,72,131,47,106,93,177,250,71,128,170,4,127,73,148,189,204,243,17,149,18,116,243,112,56,36,35,89,21,5,21,235,137,223,248,180,4,226,53,19,233,24,130,100,200,243,201,70,102,24,10,53,56,193,147,138,158,12,164,182,112,213,38,131,146,235,178,248,6,212,178,204,58,251,18,35,65,166,2,240,89,63,198,51,13,127,15,84,103,80,152,31,159,114,23,74,147,25,45,228,10,225,146,43,166,214,179,12,243,109,207,235,76,219,142,253,66,243,10,70,215,21,203,38,241,142,204,155,252,82,174,100,98,49,172,144,166,241,190,237,240,200,238,188,14,123,195,216,45,116,36,11,86,102,175,67,183,24,109,236,251,242,199,255,99,54,2,181,209,13,74,39,122,6,41,43,104,126,64,129,57,27,64,219,14,232,98,251,142,130,234,96,202,71,38,84,69,115,242,88,178,140,220,224,40,103,142,200,117,133,105,231,137,92,2,168,89,134,131,243,146,99,103,11,250,45,135,145,126,61,33,41,254,149,190,232,30,169,32,204,200,162,187,186,244,44,80,99,46,246,147,25,87,229,126,127,245,106,158,46,161,160,198,93,219,241,186,57,105,186,36,177,214,163,21,163,178,186,1,198,130,149,171,20,31,119,125,194,165,126,150,37,51,121,89,172,212,26,135,214,239,196,6,84,223,20,165,138,45,97,158,250,205,205,180,138,107,242,158,177,172,155,54,47,50,182,249,136,162,100,14,106,191,99,115,29,202,109,34,7,109,117,46,216,253,151,99,54,203,122,80,15,193,203,129,218,221,55,232,8,135,239,245,35,172,108,210,70,23,180,167,168,35,160,61,217,238,5,15,25,121,35,113,148,154,70,19,118,57,96,131,126,124,212,107,228,209,5,110,168,202,207,77,59,54,245,141,192,149,99,64,44,18,43,253,182,84,174,216,55,13,226,14,94,62,65,90,41,136,67,160,23,19,73,125,144,142,24,95,98,185,169,172,76,201,48,156,139,109,178,208,212,167,219,53,54,93,176,25,182,102,53,32,87,44,71,55,221,61,115,17,44,188,241,181,243,221,23,231,218,49,31,170,16,111,143,104,168,117,151,228,61,164,165,192,198,146,109,140,143,194,198,122,7,212,86,204,131,214,138,177,211,156,240,212,70,18,244,167,169,165,61,247,60,62,116,139,76,182,87,6,233,49,173,108,61,88,137,230,248,142,62,25,212,83,98,141,241,68,44,29,223,127,64,253,54,215,190,178,2,59,125,209,217,251,74,28,251,11,11,126,82,184,226,52,135,147,247,89,22,7,119,28,119,204,87,170,251,117,247,27,35,17,142,193,157,55,59,59,134,136,194,11,158,85,177,251,62,103,118,86,186,223,136,78,192,184,87,11,78,111,226,163,108,231,33,14,159,69,57,26,154,243,187,197,181,174,222,196,68,189,117,216,245,136,153,185,219,113,219,209,25,7,198,238,127,47,166,215,116,148,166,29,27,77,36,154,160,254,183,92,35,76,142,66,170,10,29,105,57,133,94,153,175,202,160,158,47,159,20,112,233,254,15,163,236,71,167,85,138,252,24,124,130,238,188,32,232,247,62,248,14,122,99,90,243,154,211,110,131,173,248,97,142,180,187,245,77,220,251,23,175,179,202,248,150,18,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("34a2b5e5-c1f7-89c1-a01b-7b476cc8a544"));
		}

		#endregion

	}

	#endregion

}

