namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: BaseForecastRowSnapshotServiceSchema

	/// <exclude/>
	public class BaseForecastRowSnapshotServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseForecastRowSnapshotServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseForecastRowSnapshotServiceSchema(BaseForecastRowSnapshotServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("182e1258-0961-40a3-8b2c-b12068d94685");
			Name = "BaseForecastRowSnapshotService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,197,87,219,110,219,56,16,125,118,129,254,3,145,190,200,64,32,3,125,92,199,6,220,92,90,47,118,179,65,220,118,159,89,105,20,19,176,68,47,73,197,13,138,252,123,135,55,93,40,90,110,118,3,236,139,28,14,57,195,195,51,103,134,76,69,75,144,123,154,1,249,12,66,80,201,11,149,94,242,170,96,15,181,160,138,241,234,237,155,31,111,223,76,106,201,170,7,178,121,146,10,202,121,48,198,245,187,29,100,122,177,76,63,66,5,130,101,131,53,87,84,209,214,216,221,171,44,121,21,159,233,160,72,111,184,128,140,74,245,245,125,124,173,128,99,246,244,234,3,78,225,228,59,1,15,24,138,92,238,168,148,191,145,15,84,130,143,122,207,15,155,138,238,229,150,171,13,136,71,150,129,241,152,205,102,228,66,214,101,73,197,211,210,141,181,27,41,156,31,17,252,64,164,243,36,210,186,166,222,115,214,113,221,215,223,118,44,35,244,155,84,130,102,138,100,26,196,73,12,19,228,30,191,33,116,239,178,201,182,80,82,164,112,79,5,147,188,178,148,89,23,183,161,221,231,148,195,196,111,212,236,116,39,248,30,132,98,128,219,221,153,80,110,129,139,139,199,48,217,53,1,111,81,68,228,7,121,0,53,71,18,240,243,28,93,124,93,41,166,158,80,45,117,89,29,117,121,7,85,110,49,88,131,179,135,230,189,224,10,53,7,57,201,80,118,202,111,177,202,84,77,119,154,202,22,216,130,156,117,56,62,155,143,184,127,98,82,113,241,132,203,86,59,70,165,118,45,182,98,212,165,19,186,245,25,119,177,60,120,199,198,11,10,237,213,75,183,246,18,117,134,152,130,52,56,98,199,245,147,124,65,69,98,140,202,22,39,169,123,195,41,209,133,61,153,4,139,22,193,178,249,72,18,162,98,241,103,182,75,194,18,114,6,0,146,9,40,22,77,102,60,116,221,39,206,102,75,194,240,228,180,178,197,52,172,166,14,179,177,0,196,15,98,10,59,133,200,244,140,62,41,47,2,20,240,25,12,35,128,142,177,250,39,168,45,207,135,148,182,91,61,50,161,229,222,112,208,202,215,176,112,41,128,42,232,27,147,181,254,222,3,205,65,16,97,126,188,16,30,41,90,248,97,157,163,6,236,12,118,115,101,203,245,43,221,213,112,241,177,102,249,50,25,238,102,116,74,43,37,211,117,222,150,247,116,222,132,5,163,248,255,20,57,108,30,46,186,0,85,139,138,84,112,56,194,66,226,143,55,65,131,69,160,127,207,173,205,70,53,102,143,209,205,120,9,153,57,63,72,91,171,95,182,5,8,215,104,19,50,97,22,60,119,235,103,152,185,13,232,155,211,101,234,22,14,136,81,90,91,114,195,118,202,72,7,59,52,41,204,224,156,152,216,68,234,175,3,48,222,218,241,176,188,153,210,134,243,19,119,1,118,42,109,128,188,235,228,41,116,104,145,64,185,206,221,96,225,192,27,118,61,118,11,176,65,29,130,112,185,115,17,224,59,38,12,251,162,62,123,19,226,151,226,70,177,182,170,147,62,146,86,135,139,208,47,199,105,122,101,246,198,137,169,165,115,146,90,137,37,97,95,111,137,59,169,251,32,82,164,221,15,41,25,234,59,93,201,151,21,132,221,54,189,17,188,76,34,247,96,47,160,63,149,119,90,35,35,226,119,206,170,100,0,44,136,16,57,77,115,224,191,94,131,54,4,35,175,255,65,244,113,226,198,194,153,65,200,199,223,91,16,240,26,233,92,107,114,90,229,251,248,171,42,127,141,232,183,28,53,168,247,136,150,195,148,224,27,193,254,217,235,123,86,226,47,232,49,189,114,234,118,19,18,237,55,39,154,133,140,52,137,78,71,254,183,53,247,203,185,53,90,151,71,212,218,203,191,28,175,53,228,221,14,211,59,42,208,130,135,151,137,37,33,189,135,140,139,28,89,155,54,120,117,206,95,172,78,195,246,152,222,67,4,182,221,161,92,166,97,250,135,185,230,44,39,166,136,55,244,17,252,85,148,68,31,71,254,255,149,120,202,255,135,91,165,85,33,246,106,143,206,210,213,187,40,154,126,30,187,46,189,98,157,154,135,8,79,92,22,88,218,230,41,162,159,226,90,187,127,96,6,47,226,79,138,101,226,252,164,217,58,189,254,14,89,141,165,101,94,54,73,226,95,85,139,165,127,121,52,177,211,85,158,39,209,103,153,115,114,129,159,221,47,190,252,50,144,242,138,21,133,62,170,238,63,54,144,157,31,200,160,249,247,210,232,33,244,30,59,82,123,126,29,58,242,44,181,123,245,141,104,251,9,1,184,84,210,64,16,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("182e1258-0961-40a3-8b2c-b12068d94685"));
		}

		#endregion

	}

	#endregion

}

