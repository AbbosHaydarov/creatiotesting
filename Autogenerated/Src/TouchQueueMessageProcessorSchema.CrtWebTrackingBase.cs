namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TouchQueueMessageProcessorSchema

	/// <exclude/>
	public class TouchQueueMessageProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TouchQueueMessageProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TouchQueueMessageProcessorSchema(TouchQueueMessageProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("df156054-a09a-4b76-826d-896d4920eed5");
			Name = "TouchQueueMessageProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d23d224d-d671-416d-91d0-80132a374d7a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,77,111,219,48,12,61,187,64,255,3,145,93,220,75,114,111,154,20,93,80,12,5,154,174,195,186,115,161,56,180,35,76,150,60,73,206,214,21,253,239,163,36,219,177,157,184,73,119,241,7,69,62,210,239,81,148,37,203,209,20,44,65,120,66,173,153,81,169,29,47,148,76,121,86,106,102,185,146,231,103,175,231,103,81,105,184,204,224,251,139,177,152,211,186,16,152,184,69,51,254,130,18,53,79,166,141,79,27,38,207,149,60,188,162,113,103,207,132,90,49,113,121,25,252,199,247,42,203,200,76,235,228,241,73,99,70,121,96,33,152,49,151,240,164,202,100,243,173,196,18,151,104,12,203,240,81,171,132,158,148,246,222,147,201,4,174,76,153,231,76,191,204,171,247,202,3,13,48,33,32,15,97,6,82,173,114,242,69,132,68,99,58,27,237,144,71,147,249,184,198,154,180,192,138,114,37,120,2,137,171,228,221,66,34,34,140,174,187,218,137,39,171,203,196,42,77,159,240,232,97,130,71,191,94,111,184,147,220,114,38,248,95,170,82,226,111,224,20,205,36,9,164,82,176,27,12,5,184,10,247,75,12,150,130,105,150,131,36,97,103,163,210,160,166,252,50,200,53,154,255,160,119,72,26,67,3,62,190,154,248,48,143,82,125,233,240,55,198,63,58,176,208,205,114,1,174,99,162,168,231,52,235,185,185,6,136,222,42,170,80,174,3,91,93,234,40,99,129,218,114,116,196,105,190,101,22,131,67,17,94,224,238,86,150,57,106,182,18,120,245,153,25,28,174,121,14,207,121,207,100,22,27,198,93,29,255,139,184,60,8,8,51,207,98,52,144,15,174,175,33,30,90,155,193,189,98,107,212,180,175,236,110,45,190,184,152,126,128,168,99,29,118,35,247,154,170,181,19,186,178,209,110,120,183,227,170,94,217,114,109,75,38,160,167,121,239,245,21,50,180,83,48,238,242,246,78,129,110,4,16,7,3,25,107,161,200,11,158,133,119,157,182,74,241,246,128,80,53,34,37,37,77,106,223,192,127,245,236,248,206,150,76,146,20,158,243,16,23,135,113,240,168,184,180,102,228,201,39,24,211,133,153,193,150,137,18,219,109,124,10,219,7,103,78,213,72,15,202,242,148,163,110,72,7,171,64,58,227,11,176,149,42,45,20,161,39,104,62,30,97,103,16,27,158,109,179,84,219,218,244,13,7,54,15,93,86,247,225,2,195,7,236,51,63,208,6,51,244,198,74,159,247,131,128,167,105,112,119,162,0,205,150,11,187,208,233,64,10,184,47,117,135,7,219,50,46,220,96,168,143,145,90,14,218,162,31,149,163,151,201,117,149,187,7,37,180,178,68,1,174,155,109,117,52,188,186,245,251,221,27,171,126,247,207,3,10,244,224,142,8,209,96,237,145,63,52,158,150,104,55,106,61,52,196,183,138,175,73,34,139,90,50,81,149,18,239,213,88,147,94,31,47,41,253,68,176,100,3,241,150,233,157,16,180,215,6,198,114,29,23,241,20,226,198,127,188,96,178,114,172,194,226,58,79,19,16,237,188,235,234,106,159,64,76,20,105,180,165,14,71,154,39,163,190,158,204,203,177,153,253,164,105,182,187,102,172,106,161,71,226,7,126,57,130,106,102,78,253,41,168,220,71,243,83,183,133,251,37,106,255,32,120,68,252,147,96,225,199,122,136,186,209,25,29,156,210,62,148,66,124,213,183,121,97,95,110,107,23,151,10,18,58,77,125,38,15,68,49,189,114,104,179,113,250,229,161,112,74,214,160,31,58,101,124,195,156,220,40,53,59,139,13,38,63,219,85,198,77,234,74,199,126,15,118,84,62,44,101,176,118,141,111,231,103,255,0,136,108,142,95,87,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("df156054-a09a-4b76-826d-896d4920eed5"));
		}

		#endregion

	}

	#endregion

}

