namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastColumnSettingModelsSchema

	/// <exclude/>
	public class ForecastColumnSettingModelsSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastColumnSettingModelsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastColumnSettingModelsSchema(ForecastColumnSettingModelsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("caf2a486-8320-4af0-9da3-4fa7ddc482cf");
			Name = "ForecastColumnSettingModels";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,87,61,111,219,48,16,221,3,228,63,28,210,165,93,108,160,99,18,100,168,19,187,238,208,26,113,147,165,232,64,139,39,135,5,69,186,252,72,97,4,249,239,61,74,180,45,127,219,148,52,25,212,123,119,239,222,241,132,179,98,5,218,25,203,16,126,162,49,204,234,220,117,122,90,229,98,234,13,115,66,171,78,95,27,204,152,117,207,159,47,47,222,46,47,128,30,111,133,154,194,120,110,29,22,55,219,71,20,64,74,204,2,219,118,6,168,208,136,108,13,246,29,255,57,122,23,114,125,179,90,209,187,234,237,7,131,83,34,65,79,50,107,175,225,11,179,72,161,124,161,198,232,28,17,23,184,110,183,11,183,214,23,5,51,243,187,213,81,192,67,22,184,144,107,3,76,74,200,74,58,216,138,223,169,209,187,235,252,153,159,72,145,69,246,142,196,1,19,171,223,163,96,113,124,143,185,80,104,225,85,88,49,17,82,184,57,232,28,114,195,74,67,152,132,25,51,46,28,69,109,175,76,122,140,202,246,169,11,207,175,96,213,200,232,25,26,55,255,120,37,108,127,25,114,68,17,191,10,206,81,93,125,250,189,98,196,154,38,90,75,24,238,132,195,27,76,209,221,4,127,110,224,189,98,190,47,187,129,138,87,13,217,211,159,115,122,243,136,51,131,22,149,179,27,61,177,199,155,18,12,19,100,92,213,156,181,172,215,205,122,245,164,196,95,143,32,200,10,39,114,129,166,236,11,147,153,151,204,33,135,112,236,230,231,55,199,106,111,50,124,26,242,93,253,24,120,193,97,188,64,108,182,32,93,183,193,28,13,42,26,229,202,225,243,101,83,132,202,202,3,194,31,87,152,36,233,3,164,43,64,211,73,36,11,238,5,183,100,83,187,221,75,3,237,35,162,239,82,111,157,9,223,158,199,58,174,61,243,73,133,208,60,217,249,138,126,212,252,209,26,44,73,125,89,118,187,130,143,56,94,23,157,108,122,95,72,71,78,115,230,24,252,33,37,49,248,249,194,243,50,208,1,185,85,166,251,144,168,181,219,81,251,164,228,94,149,159,225,100,231,67,128,163,23,165,95,3,181,51,166,27,186,19,167,116,37,254,200,165,89,21,144,124,101,122,209,244,32,186,166,158,99,170,108,142,71,5,115,108,199,109,202,155,209,5,130,32,160,170,160,252,165,120,210,164,134,80,63,42,254,225,57,173,1,155,173,6,180,52,22,228,253,105,187,65,4,159,187,165,173,231,104,184,9,108,223,247,40,42,113,61,43,105,187,204,30,62,40,95,144,195,19,137,183,177,130,33,237,204,119,240,28,24,205,111,79,132,52,213,31,1,207,251,202,216,95,199,184,198,108,103,24,60,173,245,139,114,132,90,85,40,89,194,247,159,130,13,85,212,184,119,91,126,170,129,154,13,194,3,23,46,120,116,218,36,44,208,231,239,200,89,57,18,27,217,218,156,9,97,97,106,180,159,1,82,142,68,239,133,29,132,16,65,229,129,63,42,75,204,201,206,191,255,7,236,157,195,149,198,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("caf2a486-8320-4af0-9da3-4fa7ddc482cf"));
		}

		#endregion

	}

	#endregion

}

