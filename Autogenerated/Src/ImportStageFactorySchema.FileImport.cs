namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ImportStageFactorySchema

	/// <exclude/>
	public class ImportStageFactorySchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ImportStageFactorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ImportStageFactorySchema(ImportStageFactorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0d595c49-6a8f-46db-af6c-6f4c033b5921");
			Name = "ImportStageFactory";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,85,77,107,219,64,16,61,59,144,255,48,117,46,18,8,249,222,216,6,199,177,139,41,13,1,39,167,16,202,86,26,201,11,210,174,216,93,37,21,33,255,189,179,146,236,232,179,182,15,50,154,125,243,245,230,237,72,176,20,117,198,2,132,39,84,138,105,25,25,127,45,69,196,227,92,49,195,165,240,183,60,193,93,154,73,101,174,175,62,174,175,38,185,230,34,134,125,161,13,166,4,77,18,12,44,78,251,63,80,160,226,193,237,9,211,140,168,112,204,238,111,89,96,164,226,168,9,65,152,27,133,49,197,3,88,39,76,235,239,80,229,222,27,22,99,133,44,74,216,108,54,131,57,23,7,74,105,66,25,64,160,48,90,76,119,125,244,116,182,60,194,117,158,166,76,21,199,119,194,38,152,162,48,26,184,48,168,34,75,195,92,35,94,20,108,214,136,246,114,143,17,203,19,115,199,69,72,29,58,166,200,80,70,206,64,0,215,131,7,162,28,22,32,232,207,98,250,16,247,149,66,102,249,159,132,83,91,150,132,1,14,128,136,25,98,102,66,35,162,231,137,197,45,199,36,36,22,31,21,127,99,6,171,195,172,122,1,133,44,148,34,41,224,158,151,51,164,110,230,95,227,46,3,235,141,200,83,15,180,81,212,215,18,126,235,210,88,77,106,114,131,34,172,242,180,147,146,128,200,33,183,37,217,212,101,39,21,162,59,134,210,176,166,58,168,26,78,78,76,208,8,100,212,154,194,200,16,250,83,56,114,214,247,112,92,88,156,138,183,220,227,251,229,61,91,209,211,239,3,134,96,254,163,194,140,41,236,156,121,199,241,14,31,187,240,233,157,137,42,3,212,154,174,87,158,10,61,30,252,63,168,75,115,108,132,225,134,110,223,153,36,35,48,247,76,146,181,180,151,204,140,242,51,114,78,197,219,176,159,103,132,246,11,205,65,134,67,26,187,124,51,156,84,115,199,116,183,140,90,154,13,139,51,212,37,240,102,103,207,26,21,221,0,81,237,69,200,91,175,30,236,234,113,173,226,152,186,96,84,200,42,100,25,173,31,8,170,131,154,112,169,220,90,122,60,2,231,91,45,94,187,156,13,163,171,242,19,11,167,145,214,61,130,39,230,160,228,123,169,112,130,60,72,179,149,185,8,55,127,3,204,108,254,166,143,255,36,247,165,198,29,215,181,219,153,248,46,159,111,76,145,248,9,240,68,107,172,222,86,117,250,151,134,251,235,237,9,221,238,113,165,226,250,142,53,22,1,25,115,187,107,157,105,27,60,245,58,222,238,87,216,46,33,103,2,119,225,20,186,71,105,21,92,161,201,21,237,41,187,92,107,49,208,231,203,204,135,52,176,116,90,92,116,203,165,244,253,52,100,172,50,17,161,93,253,214,182,182,164,201,246,15,165,116,224,159,138,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0d595c49-6a8f-46db-af6c-6f4c033b5921"));
		}

		#endregion

	}

	#endregion

}

