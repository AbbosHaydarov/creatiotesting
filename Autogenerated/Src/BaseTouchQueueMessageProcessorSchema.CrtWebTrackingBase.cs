namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: BaseTouchQueueMessageProcessorSchema

	/// <exclude/>
	public class BaseTouchQueueMessageProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseTouchQueueMessageProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseTouchQueueMessageProcessorSchema(BaseTouchQueueMessageProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("3aa70af8-d87d-47b6-96a6-1b7d6c78bd6b");
			Name = "BaseTouchQueueMessageProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d23d224d-d671-416d-91d0-80132a374d7a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,141,86,193,110,219,56,16,61,187,64,255,97,224,94,100,192,176,247,28,219,42,90,39,93,20,109,130,20,77,79,197,98,65,203,35,133,168,68,10,36,229,214,45,242,239,29,138,162,68,73,182,147,147,68,114,102,56,243,222,227,144,130,21,168,75,150,32,60,160,82,76,203,212,44,182,82,164,60,171,20,51,92,138,215,175,254,188,126,53,169,52,23,25,124,61,106,131,197,106,48,38,251,60,199,196,26,235,197,191,40,80,241,164,179,9,195,42,236,230,179,92,238,88,126,117,181,149,69,33,197,226,179,204,50,154,62,231,183,248,192,18,35,21,71,77,22,100,243,70,97,70,251,193,54,103,90,95,193,123,166,241,65,86,201,227,151,10,43,188,69,173,89,134,247,74,38,244,39,85,237,177,92,46,97,173,171,162,96,234,24,55,227,198,2,53,216,45,115,4,115,44,113,15,133,243,135,84,201,130,124,16,33,81,152,110,166,221,14,211,101,188,240,49,151,65,208,178,218,229,60,1,182,211,70,81,194,144,216,244,158,201,14,92,250,167,215,8,123,10,219,149,75,16,27,85,89,40,168,234,251,122,55,103,49,44,175,158,248,40,184,225,44,231,191,169,66,6,2,127,2,39,127,38,136,109,153,130,121,196,176,186,203,89,82,197,174,26,91,247,184,112,55,83,50,197,10,16,36,169,205,180,210,168,40,93,225,132,49,141,183,149,82,40,12,216,121,72,218,133,197,122,89,123,213,65,26,248,46,103,18,125,235,69,174,3,118,195,25,193,185,35,255,104,56,109,85,60,153,88,153,209,254,27,160,159,91,38,40,174,34,201,26,55,29,57,134,239,37,23,70,79,103,86,139,147,201,157,52,60,229,181,143,5,112,148,151,95,31,110,232,188,45,3,95,73,11,6,179,99,228,230,158,26,74,81,236,29,171,125,138,169,206,18,149,33,165,19,193,74,26,10,135,123,103,82,250,33,92,243,122,19,2,127,253,64,146,157,195,135,74,36,235,81,110,115,226,219,196,49,248,12,86,23,181,210,41,99,168,249,155,3,49,231,48,178,58,48,18,114,153,209,135,150,160,116,188,216,35,139,214,236,156,64,74,197,15,148,4,12,3,194,255,216,13,86,253,50,15,92,153,138,229,99,159,240,223,17,155,161,129,77,220,11,6,111,223,66,212,155,216,212,166,147,186,105,184,134,114,180,236,59,224,130,152,113,100,169,14,14,219,59,149,85,5,45,71,67,89,207,161,175,198,217,172,33,94,159,200,103,3,7,150,87,248,18,21,220,162,121,148,251,177,4,158,61,230,218,81,77,242,57,203,131,71,183,237,82,7,201,247,48,82,234,25,99,250,88,174,9,182,26,176,59,58,236,209,72,120,190,133,190,60,206,53,234,68,241,210,98,120,62,92,173,103,80,168,171,220,140,67,123,181,212,229,16,228,151,226,92,83,157,15,188,64,74,131,41,99,71,97,108,98,234,159,57,220,252,74,176,78,8,176,253,163,38,80,229,185,239,38,7,166,156,232,45,10,180,214,3,37,128,128,76,121,10,81,16,166,31,167,11,20,192,16,196,11,193,105,75,232,96,176,17,2,245,46,62,138,84,70,109,94,243,176,198,129,247,124,180,171,143,167,208,84,74,184,1,105,117,176,195,141,82,212,136,79,111,209,86,217,238,54,91,77,2,201,119,132,201,3,221,241,124,143,53,242,77,127,111,152,138,234,59,128,233,31,39,85,21,192,95,232,140,128,242,55,54,211,227,6,221,224,223,146,187,106,125,219,164,41,130,23,196,226,155,73,238,228,79,103,100,212,209,51,212,10,195,159,145,239,180,179,109,30,182,255,70,179,255,8,244,131,252,65,172,235,172,129,240,9,18,102,168,65,70,161,142,90,198,173,62,201,246,52,114,87,214,178,33,194,60,42,159,142,227,225,148,103,79,11,142,186,176,218,23,55,155,231,30,20,215,152,114,65,93,134,212,236,158,54,9,19,254,6,104,73,160,11,68,203,194,61,166,94,250,90,40,156,239,52,190,116,13,133,172,218,23,88,248,116,168,35,186,202,117,188,94,250,191,224,85,225,219,195,78,202,28,182,76,12,4,119,190,135,217,62,238,89,183,111,99,195,232,21,245,9,143,254,40,118,42,240,61,105,0,180,131,191,63,73,115,127,1,214,111,20,156,123,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("3aa70af8-d87d-47b6-96a6-1b7d6c78bd6b"));
		}

		#endregion

	}

	#endregion

}

