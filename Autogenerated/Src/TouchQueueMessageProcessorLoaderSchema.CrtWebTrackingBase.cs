namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TouchQueueMessageProcessorLoaderSchema

	/// <exclude/>
	public class TouchQueueMessageProcessorLoaderSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TouchQueueMessageProcessorLoaderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TouchQueueMessageProcessorLoaderSchema(TouchQueueMessageProcessorLoaderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4d82fe34-a6a1-4613-a17e-ba392938c2ae");
			Name = "TouchQueueMessageProcessorLoader";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d23d224d-d671-416d-91d0-80132a374d7a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,86,219,78,27,49,16,125,94,36,254,97,154,74,40,145,208,230,189,36,145,40,130,54,18,20,10,65,60,34,103,51,155,184,120,237,224,75,104,138,250,239,29,123,47,201,110,110,244,101,21,143,103,206,204,156,185,56,146,101,104,230,44,65,24,161,214,204,168,212,198,23,74,166,124,234,52,179,92,201,227,163,247,227,163,200,25,46,167,240,176,52,22,179,179,198,153,244,133,192,196,43,155,248,27,74,212,60,217,208,185,230,242,117,67,120,143,105,97,184,186,90,15,35,203,118,221,104,220,37,143,175,88,98,149,230,104,72,131,116,62,107,156,146,3,184,16,204,152,47,48,82,46,153,253,116,232,240,6,141,97,83,188,211,42,161,95,74,95,43,54,65,29,108,186,221,46,244,140,203,50,166,151,131,226,28,236,193,42,16,164,103,128,9,1,108,193,184,96,99,129,36,38,84,120,245,176,144,229,184,48,47,129,77,92,66,118,215,48,231,110,44,120,2,73,128,61,28,85,68,85,160,239,42,29,34,219,106,231,83,165,172,238,2,88,174,209,12,62,8,134,146,91,206,4,255,131,6,36,190,1,39,107,38,169,234,42,5,59,195,60,12,31,231,102,160,185,100,206,52,203,64,82,183,244,91,206,160,38,255,50,47,93,107,240,72,103,72,42,65,5,30,247,186,193,44,160,20,249,30,202,180,253,88,3,135,186,175,14,248,102,140,162,231,186,24,250,13,61,223,28,81,228,147,174,224,71,203,57,154,118,39,220,252,45,184,68,57,201,233,172,115,123,197,81,76,60,171,154,47,152,197,252,114,158,31,128,82,179,148,135,70,54,81,82,44,65,141,127,145,79,120,22,42,121,185,205,127,247,3,197,249,69,240,184,197,126,120,41,93,134,218,119,79,207,135,54,128,231,121,45,212,134,89,131,150,6,1,103,251,19,186,65,59,83,59,51,26,43,37,224,59,51,161,52,21,95,231,214,106,62,118,22,219,62,28,176,244,41,217,215,104,157,150,65,68,243,110,47,156,177,42,171,244,77,219,95,168,180,189,42,245,38,104,231,20,168,123,177,19,240,162,248,54,245,78,122,251,44,6,237,78,124,46,151,245,10,150,41,108,178,73,113,53,75,15,239,16,220,45,152,134,55,165,95,194,218,243,119,164,184,224,212,123,84,184,48,229,249,6,89,250,220,122,195,167,109,154,20,204,89,133,69,22,152,141,197,50,184,33,140,173,216,30,108,189,5,75,18,107,198,241,211,12,53,6,254,160,31,166,38,138,2,203,67,243,224,198,97,70,111,211,146,222,175,204,224,238,105,234,20,212,70,39,39,251,106,27,202,186,149,210,133,226,147,176,54,54,105,12,200,60,133,118,163,101,225,19,117,190,19,162,84,41,114,204,243,37,120,250,250,41,33,187,213,176,84,186,31,193,171,1,22,136,161,4,13,187,254,182,242,23,86,77,31,253,134,113,60,82,215,220,228,115,91,58,105,80,179,159,121,184,160,221,96,87,231,97,177,13,119,206,209,57,141,48,225,42,29,231,150,149,129,215,61,109,142,122,135,90,230,64,4,31,217,113,171,149,112,232,233,184,15,81,254,223,139,7,41,241,144,56,173,81,218,170,197,247,61,47,57,21,102,224,169,247,111,82,207,32,61,74,26,211,126,107,127,174,173,238,160,122,111,12,61,56,37,208,218,147,179,224,218,58,38,106,75,98,63,104,125,125,172,122,190,214,106,166,216,243,62,228,67,120,101,55,53,154,47,190,82,250,146,37,179,114,226,203,62,247,126,170,23,154,150,210,142,134,10,189,84,180,245,218,191,141,243,201,100,152,254,80,246,242,55,69,102,218,37,80,217,208,245,253,179,178,219,211,53,185,180,46,36,217,63,230,251,131,28,60,10,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4d82fe34-a6a1-4613-a17e-ba392938c2ae"));
		}

		#endregion

	}

	#endregion

}

