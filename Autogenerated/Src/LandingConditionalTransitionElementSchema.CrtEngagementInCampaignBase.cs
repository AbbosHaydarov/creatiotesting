namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: LandingConditionalTransitionElementSchema

	/// <exclude/>
	public class LandingConditionalTransitionElementSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public LandingConditionalTransitionElementSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public LandingConditionalTransitionElementSchema(LandingConditionalTransitionElementSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("6934d897-6434-4bdb-aa9b-923cf38071ee");
			Name = "LandingConditionalTransitionElement";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d0bba11f-3986-4819-81ab-1d3ddbfc1f48");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,85,193,106,219,64,16,61,203,224,127,24,148,67,109,48,210,221,177,117,168,82,66,161,5,211,24,122,94,75,35,123,139,180,43,118,87,45,166,228,223,59,187,107,217,146,147,56,106,192,36,23,225,29,207,190,153,55,243,158,4,130,85,168,107,150,33,172,81,41,166,101,97,162,84,138,130,111,27,197,12,151,98,60,250,59,30,5,141,230,98,11,15,123,109,176,186,61,59,83,126,89,98,102,147,117,116,143,2,21,207,78,57,169,84,152,178,170,102,124,43,30,178,29,86,12,150,189,90,10,163,246,255,168,159,72,32,4,115,163,112,75,208,144,150,76,235,57,124,99,34,39,92,234,49,231,182,36,43,215,138,9,237,126,127,41,177,66,97,220,181,56,142,97,161,155,170,98,106,159,28,206,135,250,232,211,160,144,10,74,15,7,217,9,15,204,17,48,106,129,226,14,82,221,108,74,158,65,102,251,25,210,14,204,225,51,211,248,19,55,43,182,197,203,141,7,52,108,122,158,72,211,76,141,106,50,35,21,113,95,185,202,62,227,156,159,11,220,97,193,154,210,88,54,218,223,178,12,158,82,104,57,12,232,126,50,5,43,128,224,241,66,217,78,151,32,11,48,59,164,233,72,129,47,20,119,145,154,41,86,129,149,223,50,212,178,81,25,134,201,87,130,97,130,180,72,32,11,141,132,162,176,88,134,3,186,12,227,36,90,196,14,243,127,249,13,217,160,111,112,106,145,131,57,241,227,122,226,67,51,16,77,89,250,231,27,7,37,235,253,251,205,233,73,137,156,103,102,45,127,224,134,139,60,76,238,232,100,129,212,30,140,4,229,162,160,123,46,210,159,128,231,250,50,40,253,166,76,239,190,48,89,185,19,100,7,175,31,240,174,191,190,153,91,95,112,226,180,184,111,120,62,3,251,76,160,75,124,246,220,91,171,75,194,43,193,106,97,67,206,62,106,161,143,209,187,208,211,198,13,138,220,27,188,239,246,239,104,118,50,31,98,244,84,33,51,168,129,129,192,63,192,91,61,152,29,51,192,109,216,202,234,40,177,70,185,137,183,105,151,228,166,208,52,74,232,36,181,254,205,79,200,7,168,1,211,166,69,182,32,157,85,202,223,244,202,231,57,1,109,126,209,183,2,28,126,251,110,9,252,5,199,101,200,206,173,1,167,183,175,154,237,90,51,250,120,126,233,175,78,214,252,170,171,147,245,126,50,216,69,47,125,220,159,179,199,91,116,112,209,117,93,141,156,153,206,71,251,193,199,241,232,31,79,205,229,135,17,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("6934d897-6434-4bdb-aa9b-923cf38071ee"));
		}

		#endregion

	}

	#endregion

}

