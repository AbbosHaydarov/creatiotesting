namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: IntegerColumnProcessorSchema

	/// <exclude/>
	public class IntegerColumnProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public IntegerColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public IntegerColumnProcessorSchema(IntegerColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("e2041887-39e3-41a7-a400-517b34bdbd2a");
			Name = "IntegerColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("bdeb1980-c322-4103-af7f-58bfe7162080");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,165,84,193,110,219,48,12,61,167,64,255,129,203,46,54,16,216,247,182,201,176,165,200,144,195,138,96,77,118,25,118,80,109,58,17,96,75,30,37,5,8,138,252,251,40,217,89,109,39,233,165,23,71,98,30,31,201,247,36,41,81,161,169,69,134,176,70,34,97,116,97,147,185,86,133,220,58,18,86,106,149,44,100,137,203,170,214,100,111,111,94,111,111,70,206,72,181,133,231,131,177,88,221,255,223,119,179,9,175,197,147,133,200,172,38,137,134,17,140,249,76,184,229,26,48,47,133,49,119,176,84,22,183,72,115,93,186,74,173,72,103,104,140,166,128,76,211,20,30,164,218,33,73,155,235,12,50,194,98,58,126,210,106,133,100,36,247,162,236,32,237,117,253,19,141,43,237,113,156,206,78,4,198,85,149,160,195,105,255,85,129,84,198,10,197,227,235,2,236,78,26,200,124,43,192,11,98,93,180,50,242,165,68,40,52,65,221,16,251,161,218,62,33,11,21,97,47,74,135,38,57,21,73,59,85,126,63,98,33,184,137,111,82,229,156,25,217,67,141,186,136,150,131,94,227,9,60,177,17,48,5,197,63,30,112,81,137,56,254,195,156,181,123,41,101,214,54,122,25,8,119,240,158,52,44,164,253,50,155,192,176,13,38,103,135,249,251,102,12,43,96,201,121,211,216,159,85,168,220,32,62,108,200,153,35,33,48,39,20,22,77,223,23,22,141,145,136,109,145,203,51,51,171,183,224,220,131,38,82,11,18,85,144,119,58,118,198,103,43,133,153,63,225,227,217,198,4,51,79,129,228,33,13,232,144,220,170,125,185,102,180,233,49,65,159,56,102,27,94,132,193,104,24,246,215,104,116,108,149,70,149,55,98,247,149,231,26,53,146,229,171,194,186,147,182,156,139,121,71,250,225,128,143,194,138,230,36,54,122,57,37,255,242,90,230,108,132,44,36,210,21,113,234,19,55,232,61,223,85,198,195,119,39,243,192,247,203,211,173,153,109,179,204,97,58,235,199,146,86,146,33,240,254,253,185,126,160,221,233,252,202,80,31,58,79,245,249,36,254,156,251,51,204,123,27,122,140,154,151,172,97,10,145,246,18,135,117,235,204,200,155,230,95,193,183,180,46,200,63,110,163,145,44,32,250,196,252,201,154,14,43,65,236,114,7,147,132,239,4,180,179,190,135,198,151,133,166,103,177,199,56,14,249,35,66,235,72,129,114,101,217,48,182,129,46,54,252,113,249,160,52,209,126,240,248,15,203,229,220,229,206,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("e2041887-39e3-41a7-a400-517b34bdbd2a"));
		}

		#endregion

	}

	#endregion

}

