namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastColumnSettingsMapperSchema

	/// <exclude/>
	public class ForecastColumnSettingsMapperSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastColumnSettingsMapperSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastColumnSettingsMapperSchema(ForecastColumnSettingsMapperSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9177fffe-d3e8-4d30-8661-d77d7d6e57f8");
			Name = "ForecastColumnSettingsMapper";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,237,88,75,111,219,56,16,62,187,64,255,195,32,189,200,64,32,3,123,76,108,7,173,83,23,94,108,156,160,110,118,15,139,30,184,210,200,38,42,81,90,146,74,225,22,249,239,59,20,41,235,97,201,85,146,238,173,151,216,228,112,190,121,63,28,193,18,84,25,11,16,62,161,148,76,165,145,246,23,169,136,248,54,151,76,243,84,248,203,84,98,192,148,254,243,183,215,175,190,191,126,53,202,21,23,91,88,227,87,157,138,226,249,239,42,21,151,7,194,102,175,52,38,237,179,255,7,23,255,86,151,117,89,73,82,103,111,83,90,232,117,178,196,190,123,127,201,2,157,74,142,170,235,197,58,231,254,6,229,3,15,240,38,13,49,246,175,153,102,100,179,150,196,69,12,196,242,70,226,150,108,135,149,208,40,35,242,206,5,172,74,63,44,210,56,79,196,6,181,38,88,117,195,178,12,101,193,148,229,255,196,60,0,94,242,252,136,101,68,222,164,191,7,97,55,168,119,105,168,46,224,174,0,178,196,201,100,2,83,149,39,9,147,251,121,121,241,1,181,2,189,67,136,156,0,8,10,9,160,156,8,8,201,36,136,100,154,180,159,248,7,208,73,27,117,154,49,201,18,16,148,17,179,179,92,161,36,159,8,12,76,18,156,205,239,233,76,16,229,5,89,169,52,19,1,250,211,73,193,214,141,98,101,158,205,151,45,37,142,152,36,234,92,10,53,95,116,216,49,157,148,84,243,188,233,75,19,58,227,142,110,79,27,170,119,223,176,4,154,134,157,27,200,81,147,219,41,57,182,169,48,122,131,34,180,17,42,206,143,54,65,154,151,101,8,23,49,83,106,72,174,252,125,141,17,203,99,253,142,139,144,72,158,222,103,152,70,222,73,198,241,248,115,149,101,129,145,4,167,158,195,197,243,19,80,242,7,166,209,82,51,123,0,165,165,169,35,114,182,69,91,83,132,189,162,218,222,11,205,53,21,155,253,178,223,4,59,76,24,96,237,112,14,31,114,30,58,199,222,175,194,49,152,78,50,26,217,192,54,158,82,1,155,71,202,95,114,169,244,173,116,142,242,2,152,205,33,240,137,25,102,179,26,210,149,111,20,49,117,238,66,211,142,77,151,121,169,166,240,99,88,26,232,142,240,192,165,206,89,12,29,57,182,228,113,92,94,252,32,165,160,59,157,156,201,13,108,8,145,120,57,139,249,55,18,63,3,211,236,252,235,234,110,218,120,61,247,92,249,148,138,152,20,45,32,123,131,160,236,199,172,165,99,227,209,13,19,108,139,210,167,200,174,92,85,191,219,147,107,189,186,114,254,38,205,101,128,198,227,165,208,35,31,29,170,118,6,2,191,118,121,209,186,96,100,177,172,14,38,122,196,96,21,45,98,105,107,114,244,17,35,148,72,202,84,233,70,239,26,58,209,19,75,188,99,122,7,87,87,173,228,180,152,231,61,60,100,137,147,116,71,212,52,236,23,83,167,63,65,82,157,173,18,182,204,69,208,47,170,162,62,65,80,197,212,22,19,246,8,8,75,39,147,142,1,85,223,45,245,3,38,76,6,182,45,168,81,75,100,30,211,128,43,194,217,198,62,80,252,149,90,167,122,157,199,241,173,124,159,100,122,239,141,225,202,178,143,142,114,220,178,169,185,215,3,54,166,78,38,8,202,202,127,188,172,119,142,50,229,158,86,255,191,230,107,255,124,117,243,229,255,24,179,61,115,214,117,5,215,219,22,59,12,190,188,149,219,60,161,204,51,25,228,153,85,130,102,163,123,237,218,15,143,160,221,13,77,210,21,25,247,215,142,107,220,152,165,214,27,151,232,101,194,152,68,178,8,143,3,218,88,163,235,183,219,124,181,38,12,207,199,65,235,195,177,78,197,171,246,42,104,206,31,49,147,84,53,130,246,193,174,21,208,108,123,71,203,158,139,48,109,96,154,138,205,109,18,93,50,219,251,1,205,77,234,4,102,200,12,173,161,84,26,125,236,174,106,194,8,105,84,124,87,197,0,112,115,255,212,74,250,192,226,28,15,199,79,3,97,42,46,103,171,219,93,142,230,206,119,216,162,190,52,58,94,194,227,115,141,145,229,160,114,138,12,216,180,79,155,85,1,30,33,245,89,214,53,44,127,138,113,89,49,196,94,108,82,31,76,159,61,71,35,249,167,24,19,209,240,43,186,211,75,205,233,7,234,51,168,53,246,159,109,78,84,140,197,67,113,15,87,191,155,241,72,93,55,140,221,167,93,218,158,173,107,229,165,16,159,168,109,15,235,105,247,134,47,112,44,101,168,217,117,192,180,184,226,31,31,246,155,8,135,43,238,214,165,14,198,19,105,94,95,191,58,148,31,240,235,147,94,254,7,212,196,234,40,198,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9177fffe-d3e8-4d30-8661-d77d7d6e57f8"));
		}

		#endregion

	}

	#endregion

}

