namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: FileImportBackgroundProcessorSchema

	/// <exclude/>
	public class FileImportBackgroundProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FileImportBackgroundProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FileImportBackgroundProcessorSchema(FileImportBackgroundProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9711bf07-aff1-4f11-9cef-3bf614f18263");
			Name = "FileImportBackgroundProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,85,223,111,219,54,16,126,246,128,253,15,172,215,7,25,112,148,53,206,128,212,73,58,56,174,19,120,109,1,35,78,218,199,130,145,206,54,87,153,20,142,84,18,33,205,255,190,19,73,73,150,98,53,216,27,121,188,187,239,238,227,253,144,124,11,58,229,17,176,27,64,228,90,173,76,56,85,114,37,214,25,114,35,148,12,47,69,2,243,109,170,208,176,167,223,127,235,101,90,200,53,91,230,218,192,246,180,117,39,203,36,129,168,48,211,225,21,72,64,17,213,58,187,0,8,93,242,112,129,42,2,173,235,247,117,162,238,120,50,30,79,213,118,75,241,124,86,235,53,137,233,157,52,254,64,88,19,26,99,211,132,107,61,102,117,176,23,60,250,113,133,42,147,177,119,168,208,90,164,217,93,34,34,22,21,250,45,245,117,83,157,141,217,252,31,117,55,123,132,40,51,116,125,178,246,21,228,165,128,36,30,179,5,138,123,110,192,189,165,238,194,16,120,172,100,146,179,171,76,196,236,251,170,130,89,0,106,65,84,73,115,195,245,15,118,110,21,194,5,71,13,65,255,104,122,124,114,50,25,189,59,120,127,121,60,58,56,30,205,254,58,152,76,143,78,14,254,156,140,38,163,217,228,232,248,228,253,180,63,56,221,5,210,134,62,41,170,241,230,196,14,251,158,16,69,128,228,157,110,95,184,228,116,161,239,48,5,115,128,65,191,206,122,146,166,32,99,64,235,213,38,71,87,151,95,51,217,47,96,54,42,214,29,233,250,40,238,21,37,251,13,133,129,107,32,17,26,250,38,135,51,67,84,72,240,193,39,200,191,242,36,131,5,23,120,86,228,62,100,158,24,142,84,137,134,232,249,192,82,247,3,173,135,33,155,61,70,144,22,197,197,96,96,107,177,215,243,169,134,22,32,120,219,159,208,91,113,100,42,138,50,132,152,61,108,40,89,226,167,140,135,9,87,202,15,194,108,60,244,146,176,200,233,60,102,79,251,145,67,27,114,216,210,126,238,15,41,14,251,27,207,77,58,44,15,158,130,91,25,169,109,154,144,155,216,217,7,183,26,144,58,76,186,62,97,89,227,250,146,14,31,112,37,40,51,191,231,88,18,53,147,212,16,64,223,221,244,85,118,146,123,62,109,91,81,190,231,109,231,59,205,238,141,231,177,51,244,215,210,152,76,27,224,100,88,117,206,69,126,59,143,131,10,37,188,81,75,131,68,125,48,24,50,131,153,231,172,39,86,172,84,10,151,84,64,25,57,61,167,250,178,18,39,112,223,202,126,254,100,175,41,206,37,167,156,239,171,186,232,33,152,12,165,67,122,174,82,135,4,182,212,123,117,244,54,238,203,68,61,204,220,203,69,190,140,54,176,229,254,90,36,210,217,189,3,198,117,25,198,164,64,23,38,175,83,243,80,127,151,33,191,105,135,124,157,73,89,20,228,47,66,246,189,132,153,44,122,167,93,8,78,179,249,13,83,95,108,110,104,21,164,251,56,66,74,101,248,162,150,58,171,183,137,252,127,106,146,214,137,166,129,67,20,215,181,84,140,33,39,158,61,18,123,69,255,232,112,74,67,203,192,62,165,96,159,240,38,79,105,55,36,92,66,124,13,196,93,173,211,145,86,53,27,230,114,165,2,31,86,35,227,215,135,157,221,21,238,241,240,240,144,157,9,185,161,157,102,98,69,11,4,97,117,222,223,93,16,253,195,15,150,71,183,96,44,141,238,9,94,237,249,143,194,158,56,230,103,218,246,202,144,169,187,127,233,153,134,97,197,250,46,203,8,169,210,130,64,115,34,90,194,195,139,177,113,93,41,4,77,180,193,139,65,0,237,121,87,116,119,13,80,108,142,111,52,45,203,129,80,13,180,192,187,90,209,214,230,209,134,5,187,195,165,233,145,9,217,141,54,40,27,192,80,54,254,216,235,28,159,109,238,126,53,178,125,128,189,103,22,113,83,68,184,103,131,84,93,214,177,177,186,150,81,237,188,110,216,253,117,229,164,77,33,201,254,3,255,128,51,197,122,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9711bf07-aff1-4f11-9cef-3bf614f18263"));
		}

		#endregion

	}

	#endregion

}

