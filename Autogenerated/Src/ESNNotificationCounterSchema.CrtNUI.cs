namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ESNNotificationCounterSchema

	/// <exclude/>
	public class ESNNotificationCounterSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ESNNotificationCounterSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ESNNotificationCounterSchema(ESNNotificationCounterSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b5a5a03a-ef2c-4bb6-b02a-d536cf42f5bf");
			Name = "ESNNotificationCounter";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6ba26f98-9709-4408-98d0-761f0c4bf2aa");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,149,84,75,111,218,64,16,62,19,169,255,97,228,92,214,18,50,247,20,144,8,33,41,135,166,81,210,199,177,218,216,3,172,98,239,210,125,144,162,42,255,189,179,187,54,24,3,173,114,243,142,231,249,205,55,159,228,21,154,53,207,17,190,162,214,220,168,133,205,166,74,46,196,210,105,110,133,146,31,46,254,124,184,232,57,35,228,18,158,182,198,98,245,177,243,38,255,178,196,220,59,155,236,14,37,106,145,31,249,220,112,203,247,198,118,173,170,82,242,244,31,141,231,236,217,205,53,253,162,159,151,26,151,84,23,166,37,55,230,10,102,79,247,247,202,138,133,200,67,239,83,229,164,69,29,60,7,131,1,12,141,171,42,174,183,227,250,253,160,213,70,20,104,128,67,133,118,165,10,176,10,150,104,193,174,16,164,171,158,81,131,90,248,172,32,91,105,77,214,228,27,116,18,14,13,34,47,141,130,92,227,98,148,156,129,52,155,159,104,50,129,129,207,178,118,207,165,200,33,247,243,156,25,7,174,224,84,2,10,246,155,218,65,114,43,176,44,8,147,7,45,54,220,98,0,161,183,142,15,208,200,11,37,203,45,124,51,168,169,57,25,247,7,63,221,193,59,130,220,187,68,89,196,172,245,187,65,157,176,176,218,229,86,105,95,40,180,94,215,137,99,156,30,128,117,138,30,214,76,33,140,209,59,180,102,211,21,230,47,19,189,116,21,74,123,239,202,146,73,162,174,90,176,78,116,234,57,211,235,117,6,129,81,167,74,240,122,251,247,120,159,3,39,206,65,184,81,162,128,71,58,30,2,1,63,113,89,148,52,217,220,243,252,145,192,165,53,121,140,81,247,97,126,35,66,73,226,201,144,224,34,54,247,65,72,59,38,7,227,74,219,204,187,225,26,114,15,16,245,26,67,233,152,44,221,150,171,228,119,94,58,28,250,32,150,4,16,147,122,204,152,34,155,20,5,107,3,125,167,149,91,135,237,100,157,21,244,99,141,244,157,243,43,75,176,97,209,32,80,63,97,35,180,117,188,132,39,244,2,0,161,95,202,30,159,236,206,17,66,185,146,150,231,118,94,180,231,52,209,127,4,44,186,166,32,241,181,206,194,58,171,75,67,84,47,139,72,176,91,39,243,44,84,97,209,146,77,72,96,180,48,47,44,77,83,122,236,16,170,227,110,181,170,88,210,129,97,247,247,199,10,53,178,228,203,43,201,214,188,72,210,108,110,102,191,104,164,38,249,3,215,68,51,79,218,253,32,77,236,68,22,44,153,27,191,238,227,192,128,62,91,144,26,224,97,192,148,150,75,216,93,111,235,114,212,214,255,43,54,219,182,78,203,26,189,247,109,176,117,155,93,37,12,134,199,144,218,28,232,92,164,10,106,3,207,219,102,143,94,250,142,181,47,90,214,190,115,240,103,57,74,118,189,39,227,105,252,4,82,90,233,147,19,177,135,131,224,187,15,141,147,153,157,97,127,50,125,120,245,43,130,23,220,130,48,176,244,204,246,162,28,79,133,206,14,54,254,56,252,191,96,106,53,216,78,90,11,210,217,91,36,234,30,41,213,25,2,239,12,135,154,52,171,214,118,219,136,210,209,234,60,235,227,177,18,235,61,217,207,52,194,90,254,187,43,233,220,213,62,121,244,141,126,217,236,55,230,206,98,84,31,22,37,4,70,227,35,141,106,116,169,150,159,67,110,69,227,57,110,213,182,182,233,237,47,204,94,20,74,66,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b5a5a03a-ef2c-4bb6-b02a-d536cf42f5bf"));
		}

		#endregion

	}

	#endregion

}

