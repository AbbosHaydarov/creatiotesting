namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastDataIteratorSchema

	/// <exclude/>
	public class ForecastDataIteratorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastDataIteratorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastDataIteratorSchema(ForecastDataIteratorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("21b3dfe6-f171-80f3-2d69-1b482f22f3f9");
			Name = "ForecastDataIterator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,87,75,111,27,55,16,62,43,64,254,3,225,94,86,168,176,118,123,116,180,50,92,39,118,4,56,137,97,183,185,4,65,65,239,206,106,9,239,146,42,201,149,33,4,250,239,29,190,180,15,173,100,193,233,165,23,73,36,135,51,31,231,155,151,56,173,64,45,105,10,228,79,144,146,42,145,235,248,74,240,156,45,106,73,53,19,60,190,22,18,82,170,244,215,223,223,190,249,241,246,205,168,86,140,47,200,195,90,105,168,222,245,214,120,181,44,33,53,247,84,124,3,28,36,75,119,100,110,25,255,167,217,108,155,173,42,193,135,79,36,236,219,143,175,105,170,133,100,160,80,2,101,126,145,176,64,243,100,206,53,200,28,31,118,78,230,225,9,239,169,166,115,220,166,120,193,10,159,158,158,146,169,170,171,138,202,245,204,175,131,48,201,80,154,48,47,30,7,233,211,150,248,178,126,44,89,74,88,48,181,207,210,200,248,109,199,152,221,112,66,160,136,46,164,168,23,5,161,101,73,164,120,86,68,228,68,45,33,101,57,131,140,228,94,175,129,177,139,195,237,44,169,164,21,225,72,104,114,162,10,0,125,50,219,190,197,174,227,233,169,149,25,190,98,127,3,194,81,39,179,187,237,239,206,157,149,96,89,64,124,143,24,163,7,163,214,41,159,144,161,183,91,69,138,52,186,199,134,199,141,99,10,120,230,200,234,16,119,85,82,165,206,15,104,123,145,185,246,149,150,233,67,20,166,198,232,65,155,134,67,227,131,0,243,78,138,37,72,141,113,119,78,238,172,18,119,62,200,242,117,205,109,82,32,203,84,147,165,20,41,40,133,164,7,90,45,227,123,184,245,8,47,173,130,233,252,3,175,43,68,246,88,194,244,166,102,217,108,70,12,19,1,237,53,39,63,200,2,244,59,162,204,199,230,103,48,45,48,32,151,63,133,236,198,104,120,37,188,203,74,212,92,155,44,176,217,160,5,121,132,22,74,132,76,137,102,21,28,198,134,169,105,252,115,101,117,117,76,147,132,252,118,118,230,106,70,63,20,95,27,159,175,172,41,15,96,106,102,203,243,86,202,62,155,242,204,139,183,74,4,67,9,182,98,25,214,133,199,181,19,78,139,154,63,13,71,248,183,247,144,211,186,212,127,48,158,97,249,140,244,122,9,34,143,6,75,213,120,252,253,152,156,32,123,107,106,63,75,174,25,148,153,201,16,201,86,248,6,119,184,116,139,70,199,71,134,247,101,90,172,145,42,163,239,30,150,66,49,84,184,38,127,27,55,52,235,97,190,26,110,176,239,104,89,155,134,208,75,75,255,166,33,212,209,95,10,36,222,228,174,113,145,186,179,28,19,91,188,71,61,161,164,39,102,202,154,143,155,189,232,58,37,67,10,141,55,33,11,46,241,75,210,78,163,173,95,30,64,107,228,14,17,87,51,178,221,29,202,165,70,145,171,205,238,243,160,96,239,101,189,229,192,213,163,222,183,235,251,99,232,62,66,196,209,129,160,252,175,145,4,93,75,222,143,20,114,113,65,162,254,94,226,178,215,141,12,107,156,80,244,244,8,84,179,200,25,26,113,120,110,135,216,165,92,32,85,92,71,39,221,88,56,153,244,156,56,30,219,182,103,3,4,63,209,151,232,214,93,108,43,90,214,96,189,252,98,40,125,2,93,136,189,137,229,250,52,90,151,237,102,125,84,127,158,144,157,58,110,78,241,149,168,99,158,41,132,201,235,178,12,89,241,40,68,73,10,170,62,161,110,163,23,143,115,90,42,59,173,33,158,238,197,206,18,233,49,238,188,101,74,59,51,145,247,145,41,217,34,207,141,147,18,114,214,236,165,182,134,39,237,134,30,42,123,35,84,4,18,111,97,5,101,207,102,108,133,131,29,100,209,76,147,24,15,250,171,113,60,10,187,173,248,67,181,212,107,39,148,137,16,101,43,42,93,73,78,142,8,82,19,89,237,83,63,41,77,154,220,157,216,215,223,209,5,24,71,187,137,59,152,26,109,59,86,226,94,61,105,246,213,151,224,26,231,163,112,244,177,255,240,174,39,118,196,108,87,206,122,14,10,82,243,5,199,39,222,179,69,129,93,41,33,24,238,16,142,110,91,238,218,186,206,157,109,188,99,173,171,204,153,177,17,222,97,199,136,142,255,71,158,228,95,147,174,176,63,237,6,85,79,157,247,139,23,109,83,104,237,24,144,95,164,239,123,209,248,34,182,167,94,154,229,36,218,81,119,22,2,58,148,19,47,188,233,144,239,194,216,154,112,61,59,194,223,36,153,153,173,248,30,82,33,179,121,54,110,217,153,43,3,197,50,16,117,9,25,55,6,187,1,221,154,149,46,226,57,95,137,39,136,156,233,160,120,67,0,51,108,232,250,192,188,181,71,199,200,204,26,52,45,72,100,114,207,224,199,81,201,63,177,65,54,218,169,33,237,66,209,75,45,158,82,29,97,80,127,251,142,197,205,40,220,132,170,183,117,163,251,218,144,231,130,149,64,162,22,197,78,114,211,45,99,182,184,180,93,184,155,225,1,171,239,1,253,244,79,154,132,235,4,223,209,213,245,165,193,254,127,245,247,205,247,225,255,226,95,28,113,110,119,184,174,10,72,159,66,51,252,140,221,33,50,144,112,198,180,199,33,10,90,113,186,247,66,203,130,191,229,176,97,105,54,223,110,171,153,127,252,118,167,218,154,25,73,133,26,115,32,126,15,5,194,208,252,143,123,255,2,222,122,184,135,44,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("21b3dfe6-f171-80f3-2d69-1b482f22f3f9"));
		}

		#endregion

	}

	#endregion

}

