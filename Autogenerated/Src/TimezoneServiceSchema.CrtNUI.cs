namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TimezoneServiceSchema

	/// <exclude/>
	public class TimezoneServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TimezoneServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TimezoneServiceSchema(TimezoneServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("f1a2599c-253b-44c3-99dd-8d8331d75b10");
			Name = "TimezoneService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("edbaf284-b37c-4101-84cb-76a44645334f");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,221,83,77,139,219,48,16,61,123,97,255,131,200,201,129,224,31,208,54,133,196,176,91,23,210,148,56,101,15,161,7,197,158,77,213,218,146,43,141,82,220,210,255,222,25,199,206,218,110,154,158,246,178,96,12,51,243,230,235,189,145,150,37,184,74,102,32,182,96,173,116,230,17,163,216,232,71,117,240,86,162,50,250,246,230,215,237,77,224,157,210,7,145,214,14,161,124,61,178,163,20,236,81,101,176,50,57,20,87,131,209,34,67,117,108,202,94,199,61,192,254,47,0,249,8,228,28,37,167,40,17,158,0,253,201,45,68,119,50,67,99,21,184,75,8,174,18,155,178,108,38,160,248,174,237,75,59,163,165,196,207,236,91,184,234,3,32,193,42,154,117,175,10,133,245,6,190,123,101,161,4,141,46,236,27,60,176,152,139,255,164,48,42,106,29,249,148,155,84,126,95,168,76,100,133,116,78,108,85,9,63,141,134,118,24,241,74,44,165,235,172,153,72,54,32,243,181,46,234,254,254,84,131,149,9,42,203,148,194,185,198,59,40,42,176,226,30,112,232,9,167,162,193,7,9,239,74,171,118,97,145,141,236,185,136,121,170,19,143,117,68,149,222,140,82,222,134,77,165,64,195,15,65,33,135,214,51,118,97,15,158,215,13,39,222,129,165,128,6,18,220,232,201,76,124,26,56,166,83,214,38,8,44,160,183,90,112,153,209,176,67,252,108,60,227,41,255,119,35,97,176,91,83,70,115,85,125,21,131,29,105,157,232,163,249,6,225,10,240,139,201,105,177,201,199,117,186,165,113,88,10,112,120,103,108,41,145,252,4,93,17,183,242,0,39,87,244,222,113,215,165,201,235,20,235,2,6,144,179,55,122,176,178,170,32,159,113,187,13,189,35,162,2,174,215,108,180,239,196,39,222,248,58,137,224,150,223,216,91,75,252,241,150,97,27,108,23,79,242,78,190,145,206,56,52,231,151,132,31,144,61,76,136,46,55,103,69,238,189,202,195,167,246,47,141,242,69,254,213,59,228,115,221,248,226,76,119,199,78,76,15,246,249,24,31,245,30,52,125,209,52,47,235,36,15,249,176,206,164,60,231,97,255,131,102,106,217,35,153,254,244,253,1,10,25,111,23,8,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("f1a2599c-253b-44c3-99dd-8d8331d75b10"));
		}

		#endregion

	}

	#endregion

}

