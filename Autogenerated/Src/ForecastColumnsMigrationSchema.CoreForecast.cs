namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastColumnsMigrationSchema

	/// <exclude/>
	public class ForecastColumnsMigrationSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastColumnsMigrationSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastColumnsMigrationSchema(ForecastColumnsMigrationSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("6ee08079-d32e-4c13-8060-f6c336735fc6");
			Name = "ForecastColumnsMigration";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,189,87,75,111,219,56,16,62,171,64,255,3,235,94,228,133,161,67,143,109,226,34,113,227,192,139,166,221,173,210,94,138,30,24,105,108,171,144,40,47,73,185,240,6,249,239,59,36,135,50,37,217,78,55,64,123,177,64,206,235,155,55,45,120,5,106,195,51,96,183,32,37,87,245,82,39,179,90,44,139,85,35,185,46,106,145,204,107,9,25,87,250,203,171,231,207,238,159,63,139,26,85,136,21,251,0,63,116,45,44,251,159,170,22,111,90,66,186,83,26,170,254,25,117,150,37,100,70,161,74,174,65,128,44,178,1,207,251,66,252,179,191,12,241,84,85,104,34,164,72,56,118,159,92,9,93,232,2,20,50,32,203,75,9,43,180,206,102,37,87,234,53,243,94,33,174,166,18,234,166,88,57,119,45,239,166,185,43,139,140,41,141,87,25,203,140,196,9,129,200,68,165,213,127,3,122,93,231,104,225,47,89,108,185,6,171,48,218,184,131,87,137,202,170,166,228,11,244,154,125,220,128,184,148,152,129,120,204,172,166,72,130,110,164,96,2,126,116,24,29,49,186,221,109,128,157,135,20,115,147,160,26,201,69,62,113,76,51,190,49,224,144,111,20,143,232,238,11,47,27,8,111,30,76,232,162,135,71,17,206,202,90,65,254,43,49,142,7,24,199,255,15,227,215,111,236,178,41,202,60,253,124,147,66,185,36,74,220,77,26,203,236,231,128,11,40,78,200,143,56,116,204,163,121,35,108,81,19,252,208,39,132,226,189,218,187,21,92,62,208,55,200,255,228,73,24,156,115,67,4,206,219,228,3,118,120,31,7,145,22,121,114,91,167,90,98,243,180,198,61,172,78,210,159,150,139,166,186,40,203,32,21,230,155,130,214,166,87,149,251,42,159,140,45,151,108,75,232,60,45,177,112,173,209,168,88,178,152,232,231,76,52,101,233,5,143,84,226,215,111,247,14,174,193,75,250,85,83,85,92,238,124,16,140,196,251,66,233,179,64,108,234,140,96,76,27,161,177,216,255,96,175,198,78,205,18,75,137,103,107,22,135,153,41,236,143,112,200,91,68,6,171,161,36,54,97,47,142,101,172,229,143,66,96,201,69,158,91,105,178,27,69,89,141,131,76,248,64,144,63,67,153,223,88,185,30,218,0,67,80,203,71,121,66,223,6,196,78,213,17,151,115,152,210,220,145,184,173,47,112,226,239,226,241,137,194,188,171,235,146,45,20,185,239,34,255,83,115,129,122,196,4,107,145,155,170,123,108,65,226,173,210,42,233,88,114,210,143,193,75,215,117,83,230,110,165,192,30,226,169,126,241,225,240,173,146,118,106,219,181,200,9,179,219,186,200,113,67,213,25,40,149,174,1,252,90,139,173,242,207,10,36,122,35,220,194,102,77,231,56,97,118,177,238,210,108,13,21,167,48,185,195,132,45,174,68,83,225,144,191,43,225,172,27,228,41,113,170,177,49,113,63,232,169,97,62,76,99,121,153,176,181,94,244,179,73,233,27,179,94,167,28,9,225,126,254,93,123,191,137,69,249,81,64,231,41,85,22,217,61,148,166,54,47,3,235,52,113,130,190,51,150,219,132,97,140,23,130,178,70,189,246,246,208,220,108,13,16,211,235,131,139,142,66,224,219,234,112,85,244,225,4,64,113,120,248,24,152,231,28,242,154,15,38,125,11,82,39,41,62,215,120,89,252,11,31,239,190,99,17,236,49,5,26,192,22,69,27,91,87,16,201,12,19,172,193,21,76,220,173,35,47,236,4,147,57,232,108,61,151,117,245,238,50,110,215,83,143,7,33,186,176,91,135,226,145,135,60,154,244,29,232,11,242,45,196,75,94,42,8,103,10,181,198,75,16,185,123,188,209,121,240,146,179,207,65,234,163,206,211,208,118,239,167,70,180,175,193,248,100,235,132,203,78,217,0,221,112,193,87,32,49,108,93,206,36,236,49,98,122,211,202,82,87,124,130,77,77,123,172,219,64,134,160,10,93,203,35,49,223,235,160,38,198,210,8,45,37,243,66,228,11,156,102,92,100,112,185,51,47,136,120,212,53,49,10,84,41,51,64,158,160,201,14,158,129,162,191,27,144,59,114,43,140,130,189,143,59,218,39,161,105,251,208,9,148,21,57,77,147,243,64,175,89,50,212,185,163,69,62,176,173,186,204,56,31,28,130,253,191,151,195,1,181,227,193,105,72,46,4,46,164,49,163,1,173,165,31,8,68,70,231,175,112,230,197,246,200,206,167,126,178,109,61,134,235,6,71,51,193,48,8,204,10,33,204,182,236,207,12,195,52,246,238,133,110,239,149,208,56,111,219,209,214,202,126,222,41,103,222,104,242,162,135,150,65,127,240,119,103,125,104,200,183,21,125,251,206,31,232,52,186,11,175,30,254,3,30,57,109,229,141,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("6ee08079-d32e-4c13-8060-f6c336735fc6"));
		}

		#endregion

	}

	#endregion

}

