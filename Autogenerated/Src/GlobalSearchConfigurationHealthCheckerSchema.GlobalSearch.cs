namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: GlobalSearchConfigurationHealthCheckerSchema

	/// <exclude/>
	public class GlobalSearchConfigurationHealthCheckerSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public GlobalSearchConfigurationHealthCheckerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public GlobalSearchConfigurationHealthCheckerSchema(GlobalSearchConfigurationHealthCheckerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("ded389d2-4001-4264-a397-4c3ba72de51d");
			Name = "GlobalSearchConfigurationHealthChecker";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("30c103fe-34c6-441e-895c-acadc354f737");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,205,84,93,107,219,48,20,125,118,161,255,225,46,221,131,3,193,129,61,102,31,208,102,107,23,232,182,50,167,221,195,24,67,177,175,29,49,89,242,36,57,109,40,253,239,187,178,236,196,46,105,201,88,30,246,98,240,253,56,71,247,158,35,73,86,160,41,89,130,48,71,173,153,81,153,141,166,74,102,60,175,52,179,92,201,232,66,168,5,19,49,50,157,44,143,143,238,143,143,130,202,112,153,67,188,54,22,139,104,142,119,246,245,38,216,5,41,10,37,119,103,52,62,21,239,115,63,89,117,206,18,171,52,71,67,21,84,115,162,49,167,114,152,73,139,58,163,97,38,48,235,30,187,7,250,17,153,176,203,233,18,147,95,168,235,246,178,90,8,158,0,111,187,247,111,14,104,29,244,221,28,224,19,218,165,74,205,4,174,106,72,159,28,143,199,240,198,84,69,193,244,250,93,27,184,64,11,158,5,60,13,36,93,30,40,181,90,8,44,12,48,3,110,3,2,169,160,40,185,192,20,140,213,20,137,54,216,227,46,184,79,58,252,105,83,223,27,224,170,193,13,175,13,106,202,72,76,106,190,170,247,59,244,123,13,78,80,166,126,180,250,255,193,111,187,31,108,103,159,10,102,104,242,191,216,251,247,247,152,177,74,216,51,46,83,58,115,104,215,37,170,44,220,115,251,195,225,143,173,118,137,35,223,147,123,114,8,125,53,95,49,139,62,91,250,31,210,133,48,18,88,41,158,66,13,241,21,127,87,92,99,74,87,37,70,107,105,198,152,74,240,249,221,143,26,125,73,239,20,71,14,63,8,226,58,114,86,113,145,162,6,186,11,74,95,170,60,167,37,128,187,144,65,176,98,26,86,76,84,8,111,33,244,253,195,45,171,137,200,14,55,46,29,62,230,114,36,78,109,194,224,25,132,53,70,52,51,159,43,33,190,232,111,75,110,49,118,175,67,56,108,153,130,14,123,116,90,150,100,134,75,46,49,124,57,104,167,5,83,191,12,96,26,114,184,119,36,15,192,13,72,101,33,227,194,153,152,203,104,208,16,147,173,234,207,14,199,253,79,55,171,177,218,97,46,88,71,55,122,128,13,203,209,144,116,18,111,161,167,117,216,172,232,89,59,61,214,116,208,181,247,181,22,131,209,134,227,159,225,252,172,49,234,21,79,240,192,216,51,153,226,29,149,158,150,124,39,178,51,232,139,62,130,51,246,204,156,35,179,149,198,15,146,209,234,211,176,7,250,243,230,213,96,107,222,22,177,235,220,65,211,222,123,62,168,173,53,44,122,216,190,93,3,141,212,35,55,71,140,230,202,11,215,40,182,219,206,187,30,208,7,248,3,21,135,64,89,132,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("ded389d2-4001-4264-a397-4c3ba72de51d"));
		}

		#endregion

	}

	#endregion

}

