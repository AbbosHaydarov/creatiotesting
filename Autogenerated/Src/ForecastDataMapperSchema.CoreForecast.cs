namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastDataMapperSchema

	/// <exclude/>
	public class ForecastDataMapperSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastDataMapperSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastDataMapperSchema(ForecastDataMapperSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5f49ba06-6712-4c2c-9ad3-21e060b91318");
			Name = "ForecastDataMapper";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,173,87,89,111,27,55,16,126,86,128,252,7,86,1,146,21,106,172,128,62,182,182,138,214,135,162,54,78,12,91,200,75,80,24,244,46,101,179,216,93,110,72,174,13,33,240,127,239,12,239,61,148,180,69,94,36,145,115,112,206,111,70,13,173,153,106,105,193,200,150,73,73,149,216,233,252,84,52,59,126,223,73,170,185,104,242,11,33,89,65,149,254,248,211,203,23,95,94,190,152,117,138,55,247,228,102,175,52,171,127,25,156,65,180,170,88,129,114,42,95,179,134,73,94,140,120,222,241,230,115,188,76,159,173,107,209,0,5,104,203,229,146,28,171,174,174,169,220,175,220,249,74,138,71,94,50,69,106,166,31,68,169,136,22,164,166,45,217,57,3,73,73,53,205,189,240,50,145,110,187,187,138,23,164,168,168,82,196,251,115,6,220,151,180,109,153,4,14,116,108,246,74,178,123,176,156,128,255,74,211,70,171,159,225,77,254,72,53,51,54,205,90,123,32,5,210,137,210,210,216,47,25,123,47,192,172,27,214,82,8,153,144,228,132,204,111,111,207,207,214,231,183,183,115,235,206,236,21,107,74,171,221,157,221,83,151,214,149,3,15,61,10,94,146,11,94,85,16,214,174,110,62,210,170,99,42,219,196,32,31,111,233,93,197,44,117,5,118,225,183,58,34,215,226,137,72,241,116,100,140,51,44,232,236,6,130,79,56,124,44,136,113,119,134,129,163,197,3,201,18,45,78,9,225,254,151,242,220,7,216,31,120,85,70,238,252,20,207,146,53,65,106,246,72,37,209,70,130,85,21,196,166,97,79,100,27,206,158,107,102,245,157,66,36,129,199,104,205,205,225,71,8,230,28,62,189,126,184,59,234,203,108,202,32,177,41,3,109,45,69,215,122,117,19,178,134,110,69,45,53,145,157,214,120,205,10,33,75,67,131,224,2,197,17,158,177,152,141,57,232,80,97,189,68,14,60,171,95,189,120,126,193,165,210,31,228,25,219,209,174,210,25,112,216,136,172,136,251,153,95,65,191,8,120,33,63,255,220,209,74,101,193,178,133,87,50,123,253,58,112,123,239,3,183,51,120,177,240,6,241,29,201,140,61,63,64,216,187,170,138,73,153,133,140,228,166,170,192,226,172,20,208,38,108,81,132,75,175,198,234,49,218,183,251,150,97,4,78,66,27,153,102,81,249,135,187,191,161,36,141,152,181,203,114,38,47,38,79,190,165,202,6,83,193,187,90,38,47,61,251,152,122,15,28,168,132,234,207,127,43,203,44,104,242,158,90,118,243,249,220,111,161,113,7,172,153,30,93,102,174,99,188,185,146,233,78,54,182,84,71,10,156,71,73,33,228,91,113,99,208,32,91,184,106,25,213,138,187,63,165,45,246,173,187,54,46,57,202,70,153,138,244,2,246,228,165,146,0,184,14,122,199,149,118,221,15,113,88,101,182,66,108,41,14,66,224,128,10,18,86,27,1,116,98,83,102,235,142,151,159,254,34,0,90,12,160,110,83,2,110,224,21,145,206,116,31,11,76,126,100,194,212,247,74,201,133,202,75,37,161,176,185,177,169,65,16,224,229,21,149,26,29,136,234,112,214,20,84,103,232,18,24,243,197,171,121,118,210,78,187,117,33,255,67,240,38,27,3,238,145,87,189,72,221,255,54,228,154,169,96,137,189,121,3,21,2,195,229,129,153,233,98,106,205,99,97,222,27,43,86,10,141,168,73,3,115,244,100,142,19,104,190,218,130,104,127,40,29,47,13,87,20,178,126,169,85,132,114,34,118,96,1,131,167,36,219,157,204,19,140,157,47,87,199,75,47,96,18,107,199,217,193,57,0,246,195,96,75,174,84,150,14,61,99,146,207,31,38,6,220,116,124,227,226,178,42,125,50,195,8,112,216,211,236,68,50,48,140,171,78,83,168,15,124,160,53,184,214,7,99,139,117,249,123,136,91,126,205,218,10,86,144,108,78,230,71,8,247,190,173,77,213,96,203,157,36,54,14,113,148,34,130,226,187,37,243,72,24,223,11,88,136,85,108,85,13,161,208,61,16,199,146,245,39,224,86,58,35,156,209,201,80,112,78,197,23,35,37,180,250,216,227,200,228,198,229,225,192,199,161,164,46,36,53,217,166,21,86,251,91,94,150,70,208,79,137,73,250,112,70,37,113,68,36,53,235,64,15,68,29,228,58,187,12,211,161,208,76,79,207,126,154,167,192,113,28,154,45,215,85,8,202,70,129,233,169,10,115,142,212,243,146,219,166,140,226,135,166,146,103,77,71,146,87,132,180,203,158,173,254,38,62,245,127,34,238,165,189,81,125,35,93,168,123,224,232,64,46,166,38,133,177,175,32,19,0,161,131,39,236,60,211,41,223,15,161,82,33,135,126,3,185,136,137,255,25,220,134,51,245,95,65,220,80,40,0,221,144,48,1,119,54,41,132,28,6,205,193,182,235,112,241,70,116,178,48,138,123,29,58,50,101,4,144,110,161,8,176,8,231,62,38,58,216,153,220,70,112,19,113,77,57,218,254,195,146,111,22,252,180,127,123,230,14,187,123,88,105,145,243,96,177,249,11,92,28,212,196,30,84,196,244,238,164,168,253,164,196,165,23,255,133,141,255,134,77,20,22,50,67,89,37,146,95,45,196,184,56,120,33,187,48,188,81,126,167,56,92,141,223,181,192,54,231,77,87,51,137,151,201,22,102,93,112,0,48,218,175,72,127,242,96,17,64,14,241,218,122,190,198,141,239,247,189,221,216,97,166,153,69,220,47,146,139,252,134,161,161,217,189,108,205,255,10,228,248,246,126,58,92,250,210,109,207,107,202,255,100,251,137,189,53,37,79,239,161,129,99,43,176,45,252,14,186,8,231,222,14,135,190,30,218,207,236,29,16,254,1,136,38,214,49,143,16,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5f49ba06-6712-4c2c-9ad3-21e060b91318"));
		}

		#endregion

	}

	#endregion

}

