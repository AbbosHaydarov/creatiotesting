namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastGroupSummaryRepositorySchema

	/// <exclude/>
	public class ForecastGroupSummaryRepositorySchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastGroupSummaryRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastGroupSummaryRepositorySchema(ForecastGroupSummaryRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2dfdff3f-28f6-4076-b72f-116a96a6cf01");
			Name = "ForecastGroupSummaryRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,157,86,77,111,219,56,16,61,171,64,255,3,225,238,65,198,26,60,244,216,205,7,178,174,157,53,144,109,179,113,154,30,22,139,130,145,198,54,11,137,84,72,42,133,17,248,191,239,144,148,108,82,178,29,183,23,27,164,102,222,188,25,190,25,82,176,18,116,197,50,32,247,160,20,211,114,97,232,88,138,5,95,214,138,25,46,5,157,74,5,25,211,230,225,253,219,55,47,111,223,36,181,230,98,73,230,107,109,160,252,163,179,70,215,162,128,204,250,105,122,13,2,20,207,122,54,55,92,60,237,54,195,176,101,41,197,254,47,10,14,237,211,137,48,220,112,208,7,13,166,44,51,82,121,11,180,121,167,96,137,252,200,184,96,90,127,32,109,122,215,74,214,213,188,46,75,166,214,119,80,73,205,209,105,237,60,254,253,8,11,86,23,230,79,46,114,196,79,205,186,2,185,72,103,173,107,207,235,225,253,112,68,62,97,101,201,57,25,56,224,193,240,63,4,170,234,199,130,103,36,179,145,95,9,76,118,204,246,144,74,240,32,240,119,155,203,148,67,145,99,50,183,138,63,51,3,254,99,229,23,196,21,104,61,207,86,80,178,127,106,80,107,60,164,186,20,228,219,210,70,246,11,95,154,228,29,136,220,67,198,248,168,8,109,84,109,235,104,163,184,52,154,32,62,165,227,201,164,95,52,40,196,16,94,26,164,142,150,35,50,187,69,161,200,60,200,190,234,108,140,108,172,100,91,113,79,58,176,207,58,27,67,103,255,129,60,50,13,105,55,92,15,188,239,78,94,200,230,120,73,254,6,179,146,167,215,124,202,11,99,89,180,237,65,174,193,76,244,83,83,42,87,54,111,146,182,150,182,7,201,34,88,248,26,36,33,116,115,146,10,22,160,64,100,224,215,163,126,120,2,250,9,147,114,8,120,146,182,75,182,78,222,204,81,240,254,141,114,127,27,188,116,128,169,253,178,161,47,33,43,26,56,222,50,179,218,12,108,35,38,73,168,46,4,195,248,244,42,207,253,58,61,30,123,232,17,158,153,66,146,153,84,185,70,128,40,230,157,219,158,229,250,146,222,203,27,174,77,58,36,151,151,68,192,15,98,87,103,215,53,207,47,210,62,142,11,132,96,214,240,213,35,74,109,205,118,16,158,192,175,34,132,4,232,141,92,242,140,21,159,81,136,110,198,34,94,119,107,142,135,148,25,250,89,121,247,32,248,79,120,95,137,220,187,243,5,73,27,6,118,186,27,198,133,78,109,145,232,164,172,204,122,216,74,163,165,137,5,46,229,51,132,38,30,40,206,3,15,212,166,72,199,10,80,244,51,253,169,46,138,70,197,175,156,112,3,183,233,177,67,16,105,92,196,180,199,106,95,80,31,238,43,55,171,91,166,16,25,23,122,219,66,101,197,20,215,82,220,227,192,166,147,167,154,21,77,15,37,199,233,141,90,189,208,49,14,155,51,249,248,29,207,19,245,132,98,187,194,171,197,82,139,18,8,79,199,210,11,249,54,134,184,253,23,199,211,81,217,170,145,73,26,245,118,191,135,67,237,152,90,217,46,223,161,186,15,155,120,230,60,75,158,147,61,113,14,15,20,114,194,44,233,15,157,222,64,137,90,115,27,253,210,190,28,38,44,91,165,171,118,107,134,215,63,57,191,104,143,181,25,68,209,231,221,32,57,58,129,34,31,218,159,62,78,83,59,245,250,195,215,49,19,250,192,138,26,165,216,210,73,172,170,124,177,244,49,105,31,224,219,74,34,217,16,40,52,156,128,250,139,218,77,14,16,216,255,189,205,178,37,231,101,235,151,167,95,113,210,96,7,64,222,10,174,89,18,156,17,74,241,28,31,143,236,177,128,49,20,133,125,9,148,219,213,84,201,210,75,39,245,127,132,35,165,182,226,118,170,102,214,231,220,221,211,244,144,171,243,241,252,173,249,118,250,163,159,253,132,15,77,99,171,212,92,46,46,223,230,6,8,47,33,39,29,242,59,25,204,242,65,220,88,22,52,110,168,94,126,125,253,99,208,230,242,198,107,60,157,175,0,12,209,246,23,159,51,19,81,151,120,4,152,201,153,127,217,92,52,111,14,61,19,11,217,188,101,2,163,248,89,115,177,109,82,187,210,35,114,176,129,195,66,162,172,218,58,198,212,26,82,33,129,110,128,8,211,151,230,245,201,128,209,28,52,181,47,25,103,125,23,27,116,94,125,123,128,247,94,154,94,167,241,109,123,240,177,116,242,12,237,118,97,128,31,139,1,13,143,244,134,223,141,55,113,239,127,173,225,83,15,70,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2dfdff3f-28f6-4076-b72f-116a96a6cf01"));
		}

		#endregion

	}

	#endregion

}

