namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: EmailTemplateUserTaskLanguageIteratorSchema

	/// <exclude/>
	public class EmailTemplateUserTaskLanguageIteratorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EmailTemplateUserTaskLanguageIteratorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EmailTemplateUserTaskLanguageIteratorSchema(EmailTemplateUserTaskLanguageIteratorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b1b6547c-26c7-4f78-8568-0564e77cfd42");
			Name = "EmailTemplateUserTaskLanguageIterator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("6b752d82-945c-4729-b067-d3f384b1bc2d");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,85,203,110,219,48,16,60,43,64,254,97,161,92,28,32,176,239,142,165,32,112,3,195,64,11,4,173,115,42,130,130,150,86,50,81,138,50,248,112,225,22,254,247,46,245,178,30,118,171,75,15,61,248,65,106,56,28,206,44,87,146,101,168,247,44,66,216,160,82,76,231,137,153,46,115,153,240,212,42,102,120,46,111,111,126,221,222,120,86,115,153,194,151,163,54,152,61,246,198,132,23,2,35,7,214,211,21,74,84,60,58,99,218,180,10,105,158,158,220,41,76,9,13,75,193,180,158,195,75,198,184,216,96,182,23,204,224,155,70,181,97,250,251,71,38,83,203,82,92,27,36,33,185,42,22,206,102,51,88,104,155,101,76,29,195,106,92,3,32,161,143,224,218,184,93,183,71,64,199,10,166,162,5,75,188,96,136,24,68,197,172,167,53,227,172,69,185,183,91,193,35,136,156,180,113,202,96,14,235,161,90,143,108,163,239,230,172,175,42,223,163,50,28,233,192,175,197,30,229,243,254,145,138,9,183,21,68,185,148,165,173,78,232,80,105,45,213,129,151,13,182,63,116,233,121,94,138,198,69,226,121,186,250,115,42,119,223,43,126,112,238,52,7,248,108,5,126,125,135,111,162,53,214,143,87,133,62,83,184,71,200,147,198,84,80,110,193,53,193,42,55,36,11,227,193,126,237,161,62,107,134,32,236,73,129,167,39,152,244,166,2,144,248,163,79,89,80,184,16,220,143,231,0,23,195,36,167,12,139,76,123,237,164,235,224,253,195,223,56,232,26,60,199,25,151,111,146,143,38,250,128,9,179,226,143,240,18,125,186,111,130,187,224,70,0,7,38,44,182,35,189,67,25,151,53,215,45,64,98,214,70,217,136,170,115,76,9,174,233,48,156,9,254,147,118,113,130,57,173,102,146,250,4,133,189,208,136,16,41,76,2,127,212,13,241,103,225,20,46,151,68,49,179,103,138,101,32,169,21,5,190,237,152,224,135,253,171,176,152,21,232,246,5,24,165,161,231,110,209,15,90,102,87,53,215,3,5,61,88,219,231,255,214,181,193,226,226,202,250,97,89,81,174,139,106,44,250,57,245,209,115,175,252,55,190,63,12,58,65,33,166,170,253,57,152,29,215,147,203,81,117,91,70,80,46,28,115,17,62,161,217,229,241,152,59,176,66,163,207,22,184,151,74,84,182,11,224,49,74,195,19,142,234,74,171,27,154,140,81,174,226,117,236,135,203,33,199,162,31,143,66,99,149,212,225,139,180,89,245,150,105,53,89,151,70,141,104,229,177,174,208,91,129,139,149,229,113,232,14,80,219,164,39,110,10,106,25,181,139,20,55,178,104,7,147,3,83,133,133,84,178,221,110,92,35,189,35,71,225,8,220,190,5,148,94,246,13,253,58,158,52,212,101,195,162,20,174,69,81,206,118,39,79,191,1,4,2,23,181,138,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b1b6547c-26c7-4f78-8568-0564e77cfd42"));
		}

		#endregion

	}

	#endregion

}

