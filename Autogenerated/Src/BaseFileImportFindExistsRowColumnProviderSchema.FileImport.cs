namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: BaseFileImportFindExistsRowColumnProviderSchema

	/// <exclude/>
	public class BaseFileImportFindExistsRowColumnProviderSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseFileImportFindExistsRowColumnProviderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseFileImportFindExistsRowColumnProviderSchema(BaseFileImportFindExistsRowColumnProviderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9d3dce68-172a-4820-ac8a-f7c13b39b202");
			Name = "BaseFileImportFindExistsRowColumnProvider";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("28117f91-27b8-43f6-8b95-0e32534298ab");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,10,213,86,109,111,219,54,16,254,236,2,253,15,132,186,15,50,80,200,223,147,216,65,234,36,133,177,180,43,154,12,253,48,12,3,35,157,109,162,18,169,145,84,18,163,200,127,239,241,69,22,37,75,177,22,96,24,6,4,129,117,60,30,159,123,238,149,211,2,84,73,83,32,119,32,37,85,98,173,147,165,224,107,182,169,36,213,76,240,228,154,229,176,42,74,33,245,219,55,63,222,190,153,84,138,241,13,185,221,41,13,69,114,195,248,223,167,123,97,104,162,40,4,239,63,145,48,36,79,174,105,170,133,100,160,80,3,117,222,73,216,32,4,178,204,169,82,39,228,3,85,208,160,185,102,60,187,122,98,74,171,175,226,113,41,242,170,224,95,164,120,96,25,72,123,121,54,155,145,51,85,21,5,149,187,133,255,246,10,138,220,163,41,146,26,179,164,160,156,110,240,195,90,32,220,240,65,214,66,18,5,84,166,91,3,18,204,43,230,135,20,143,120,117,71,52,60,105,85,223,200,42,105,206,214,8,140,48,139,44,169,95,159,5,207,151,213,125,206,82,66,239,149,150,232,165,127,124,180,75,228,132,172,70,250,62,193,40,225,255,61,123,215,12,242,12,233,67,13,13,169,134,204,29,119,249,177,130,223,21,62,149,10,206,81,209,4,127,175,24,186,50,41,107,75,68,2,205,4,207,119,246,226,114,127,175,243,233,162,57,121,7,60,115,152,218,0,17,88,9,82,99,216,13,72,246,64,53,56,133,210,125,132,158,175,248,90,220,136,205,6,97,254,181,238,145,158,30,191,215,43,156,91,199,38,189,54,201,249,57,137,251,79,230,46,55,93,222,238,146,143,160,207,122,31,93,196,211,233,17,22,144,46,76,141,202,24,26,25,172,37,178,143,94,50,188,71,57,86,176,88,163,14,96,42,75,88,207,163,209,169,21,205,22,3,113,182,146,146,74,90,216,186,152,71,85,43,172,209,162,155,46,103,51,171,221,73,146,209,72,226,78,22,181,159,155,18,211,126,38,147,142,210,188,163,102,51,224,249,127,75,219,193,229,190,188,139,22,78,66,114,151,134,181,47,255,110,0,222,91,250,39,253,85,213,7,115,122,66,244,150,169,184,63,142,67,21,53,88,214,207,47,23,208,39,208,91,145,13,245,16,36,72,99,255,117,134,157,215,127,252,73,176,96,127,133,157,251,84,177,59,252,98,24,4,13,82,249,126,222,8,106,232,18,116,37,249,193,113,210,54,55,77,238,196,5,206,183,93,60,253,135,248,143,215,254,71,224,128,3,26,103,85,48,184,236,220,50,195,201,11,213,216,4,197,140,128,167,104,225,128,19,251,117,152,148,206,105,181,56,155,213,191,218,89,230,25,198,38,102,230,33,82,113,135,72,156,201,207,248,74,204,184,118,166,59,44,254,18,57,165,31,246,240,57,58,90,192,119,91,59,136,57,60,6,189,252,234,41,5,200,32,187,120,160,44,167,247,57,52,129,184,97,5,179,231,165,77,234,71,166,183,164,196,174,141,152,61,121,169,168,184,30,75,22,238,61,101,142,212,27,167,162,133,249,111,90,72,45,117,230,41,39,184,217,8,249,114,105,187,215,151,230,241,104,177,7,222,6,117,96,0,246,142,184,134,245,10,10,34,140,225,222,76,39,138,15,130,101,142,97,236,17,122,216,88,236,227,28,178,241,30,227,91,231,158,245,170,142,180,54,246,94,27,176,78,83,74,190,9,249,221,174,172,201,87,80,162,146,41,220,226,204,196,29,206,247,167,54,162,16,205,209,204,186,52,101,92,48,142,101,149,81,77,221,150,216,212,215,232,114,178,14,54,254,216,202,202,125,79,197,63,189,133,112,228,132,61,201,76,149,193,202,91,6,80,134,170,112,191,96,218,64,174,56,58,196,105,190,226,76,95,222,55,197,88,247,186,125,35,236,66,62,182,173,52,205,202,238,181,1,167,140,111,65,50,157,137,180,118,111,212,232,49,189,51,68,136,68,88,199,220,218,220,52,149,80,39,126,209,178,153,30,62,122,230,103,157,139,141,36,89,110,33,253,126,33,55,85,1,92,127,174,242,60,54,212,138,117,28,220,114,73,19,222,10,153,27,99,162,117,161,182,231,29,114,90,182,135,204,201,208,27,45,223,212,229,135,134,128,211,176,143,54,182,146,149,250,44,44,154,223,228,85,81,106,28,64,228,60,124,235,164,167,61,135,188,248,159,166,87,31,212,204,107,227,219,77,193,107,33,131,10,105,69,219,167,238,11,250,227,71,245,193,140,30,140,216,129,5,31,170,190,117,39,249,134,20,192,45,40,133,197,112,97,11,251,86,83,169,63,161,4,59,209,129,45,31,80,127,97,149,249,86,53,126,219,60,66,159,135,218,91,212,94,7,19,172,189,158,28,248,235,109,12,182,12,86,4,230,188,182,147,5,142,222,210,7,240,251,206,88,230,174,120,246,223,242,214,191,152,57,105,40,124,254,9,202,45,135,21,46,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9d3dce68-172a-4820-ac8a-f7c13b39b202"));
		}

		#endregion

	}

	#endregion

}

